[{"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2022-11-24T11:30:51.820Z", "user": 1, "content_type": 16, "object_id": "1", "object_repr": "Define ADT. Give any two examples.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2022-11-24T11:50:15.148Z", "user": 1, "content_type": 16, "object_id": "2", "object_repr": "Distinguish between linear and non linear data structures.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2022-11-24T11:55:14.799Z", "user": 1, "content_type": 16, "object_id": "3", "object_repr": "Compare calloc() and realloc() function and mention its application in linked list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 4, "fields": {"action_time": "2022-11-24T11:56:01.425Z", "user": 1, "content_type": 16, "object_id": "4", "object_repr": "Describe the differences between singly and doubly linked lists.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 5, "fields": {"action_time": "2022-11-24T11:56:53.982Z", "user": 1, "content_type": 16, "object_id": "5", "object_repr": "List out the areas in which data structures are applied extensively.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 6, "fields": {"action_time": "2022-11-24T11:57:54.280Z", "user": 1, "content_type": 16, "object_id": "6", "object_repr": "Define non linear data structure.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 7, "fields": {"action_time": "2022-11-24T11:59:02.324Z", "user": 1, "content_type": 16, "object_id": "7", "object_repr": "Compare singly linked list with circular linked list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 8, "fields": {"action_time": "2022-11-24T11:59:53.539Z", "user": 1, "content_type": 16, "object_id": "8", "object_repr": "What are the types of linked list?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 9, "fields": {"action_time": "2022-11-24T12:02:40.948Z", "user": 1, "content_type": 16, "object_id": "9", "object_repr": "List out the advantage of circular linked list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 10, "fields": {"action_time": "2022-11-24T12:06:06.840Z", "user": 1, "content_type": 16, "object_id": "10", "object_repr": "Binary search cannot be performed on a linked list. Examine.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 11, "fields": {"action_time": "2022-11-24T12:06:56.728Z", "user": 1, "content_type": 16, "object_id": "11", "object_repr": "Discuss the advantages and disadvantages of linked lists and arrays.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 12, "fields": {"action_time": "2022-11-24T12:07:57.657Z", "user": 1, "content_type": 16, "object_id": "12", "object_repr": "Give an example for linked list application.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 13, "fields": {"action_time": "2022-11-24T12:09:52.142Z", "user": 1, "content_type": 16, "object_id": "13", "object_repr": "Specify the use of Header node in a linked list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 14, "fields": {"action_time": "2022-11-24T12:10:27.881Z", "user": 1, "content_type": 16, "object_id": "14", "object_repr": "Illustrate the use of linked list with an example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 15, "fields": {"action_time": "2022-11-24T12:11:09.865Z", "user": 1, "content_type": 16, "object_id": "15", "object_repr": "Show the ways in which list ADT can be implemented.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 16, "fields": {"action_time": "2022-11-24T12:11:59.760Z", "user": 1, "content_type": 16, "object_id": "16", "object_repr": "Differentiate arrays and linked lists.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 17, "fields": {"action_time": "2022-11-24T12:12:53.858Z", "user": 1, "content_type": 16, "object_id": "17", "object_repr": "Analyze and write a find routine in array implementation.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 18, "fields": {"action_time": "2022-11-24T12:14:11.076Z", "user": 1, "content_type": 16, "object_id": "18", "object_repr": "Analyze and write the array representation of a polynomial: p(x) = 4x3+6x2+7x+9", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 19, "fields": {"action_time": "2022-11-24T12:16:43.453Z", "user": 1, "content_type": 16, "object_id": "19", "object_repr": "Should arrays or linked lists be used for the following types of applications? Support your justification.\r\n1.\tMany search operations in sorted list.\r\n2.\tMany search operations in Unsorted list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 20, "fields": {"action_time": "2022-11-24T12:17:25.168Z", "user": 1, "content_type": 16, "object_id": "20", "object_repr": "Develop an algorithm for insertion operation in a singly linked list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 21, "fields": {"action_time": "2022-11-24T12:20:01.185Z", "user": 1, "content_type": 16, "object_id": "21", "object_repr": "Describe the Applications of lists.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 22, "fields": {"action_time": "2022-11-24T12:20:58.079Z", "user": 1, "content_type": 16, "object_id": "22", "object_repr": "Describe the \tPolynomial manipulation.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 23, "fields": {"action_time": "2022-11-24T12:22:13.386Z", "user": 1, "content_type": 16, "object_id": "23", "object_repr": "What is a linked list?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 24, "fields": {"action_time": "2022-11-24T12:22:42.630Z", "user": 1, "content_type": 16, "object_id": "24", "object_repr": "Describe the suitable routine segments for any four operations.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 25, "fields": {"action_time": "2022-11-24T12:25:38.096Z", "user": 1, "content_type": 16, "object_id": "25", "object_repr": "List an algorithm to perform the following operations in a doubly linked list. \r\n  i.Insert a node at the end of the list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 26, "fields": {"action_time": "2022-11-24T12:26:25.600Z", "user": 1, "content_type": 16, "object_id": "26", "object_repr": "List an algorithm to perform the following operations in a doubly linked list.\r\n      i.Delete the last node in the list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 27, "fields": {"action_time": "2022-11-24T12:27:14.804Z", "user": 1, "content_type": 16, "object_id": "27", "object_repr": "Discuss the insertion and deletion procedures for cursor based linked lists.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 28, "fields": {"action_time": "2022-11-24T12:27:55.143Z", "user": 1, "content_type": 16, "object_id": "28", "object_repr": "Give an algorithm for the deletion and reverse operations on doubly linked list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 29, "fields": {"action_time": "2022-11-24T12:28:39.289Z", "user": 1, "content_type": 16, "object_id": "29", "object_repr": "Give the algorithm to perform insertion on a doubly linked list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 30, "fields": {"action_time": "2022-11-24T12:29:08.050Z", "user": 1, "content_type": 16, "object_id": "30", "object_repr": "Give the algorithm to perform deletion on a doubly linked list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 31, "fields": {"action_time": "2022-11-24T12:30:32.633Z", "user": 1, "content_type": 16, "object_id": "31", "object_repr": "Write an algorithm to demonstrate a polynomial using a linked list for Addition and Subtraction.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 32, "fields": {"action_time": "2022-11-24T12:31:25.719Z", "user": 1, "content_type": 16, "object_id": "32", "object_repr": "Write an algorithm to demonstrate a polynomial using a linked list for Multiplication operations.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 33, "fields": {"action_time": "2022-11-24T12:32:50.683Z", "user": 1, "content_type": 16, "object_id": "33", "object_repr": "Analyze and write algorithm for Circular Linked list for the following operations using structure pointer.\r\ni.\tCreate & Insert .", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 34, "fields": {"action_time": "2022-11-24T12:33:41.050Z", "user": 1, "content_type": 16, "object_id": "34", "object_repr": "Analyze and write algorithm for Circular Linked list for the following operations using structure pointer.\r\n i. Delete & Display.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 35, "fields": {"action_time": "2022-11-24T12:35:56.936Z", "user": 1, "content_type": 16, "object_id": "35", "object_repr": "Explain the application of linked list in detail.\r\ni. Radix sort.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 36, "fields": {"action_time": "2022-11-24T12:36:38.400Z", "user": 1, "content_type": 16, "object_id": "36", "object_repr": "Explain the application of linked list in detail.\r\ni.  Multi list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 37, "fields": {"action_time": "2022-11-24T12:37:47.645Z", "user": 1, "content_type": 16, "object_id": "37", "object_repr": "Consider an array A[1: n] Given a position, write an algorithm to insert an element in the Array. If the position is empty, the element is inserted easily. If the position is already occupied the elem", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 38, "fields": {"action_time": "2022-11-24T12:38:53.093Z", "user": 1, "content_type": 16, "object_id": "38", "object_repr": "Develop a program to add the values of the nodes of a linked list and then calculate the mean.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 39, "fields": {"action_time": "2022-11-24T12:39:20.279Z", "user": 1, "content_type": 16, "object_id": "39", "object_repr": "Describe the various operations of the list ADT with examples.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 40, "fields": {"action_time": "2022-11-24T12:40:17.342Z", "user": 1, "content_type": 16, "object_id": "40", "object_repr": "Illustrate how polynomial manipulations are performed using lists? Explain any two operations with example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 41, "fields": {"action_time": "2022-11-24T12:41:24.314Z", "user": 1, "content_type": 16, "object_id": "41", "object_repr": "Explain the steps involved in the following insertion operations in a singly linked list.\r\ni. Insert the node in the start and End.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 42, "fields": {"action_time": "2022-11-24T12:42:05.848Z", "user": 1, "content_type": 16, "object_id": "42", "object_repr": "Explain the steps involved in the following insertion operations in a singly linked list.\r\n ii. Insert the node in the middle of the List.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 43, "fields": {"action_time": "2022-11-24T12:42:46.168Z", "user": 1, "content_type": 16, "object_id": "43", "object_repr": "Dicuss an algorithm for linked list implementation of list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 44, "fields": {"action_time": "2022-11-24T12:43:25.042Z", "user": 1, "content_type": 16, "object_id": "44", "object_repr": "Create an algorithm to add two polynomials using linked list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 45, "fields": {"action_time": "2022-11-24T12:44:04.062Z", "user": 1, "content_type": 16, "object_id": "45", "object_repr": "Explain an algorithm to split a linked list into two sub lists containing odd and even ordered elements in them respectively.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 46, "fields": {"action_time": "2022-11-24T12:45:11.254Z", "user": 1, "content_type": 16, "object_id": "46", "object_repr": "Explain an algorithm to merge two sorted linked lists into a single sorted list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 47, "fields": {"action_time": "2022-11-24T12:46:17.043Z", "user": 1, "content_type": 16, "object_id": "47", "object_repr": "Design algorithm for various operations performed on circular linked list.\r\nExtend the algorithm defined in the previous question for the doubly linked circular list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 48, "fields": {"action_time": "2022-11-24T12:48:05.226Z", "user": 1, "content_type": 16, "object_id": "48", "object_repr": "Point out the advantage of representing stack using a linked list than array.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 49, "fields": {"action_time": "2022-11-24T12:48:38.443Z", "user": 1, "content_type": 16, "object_id": "49", "object_repr": "Point out the rules followed during the infix to postfix conversions.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 50, "fields": {"action_time": "2022-11-24T12:49:08.091Z", "user": 1, "content_type": 16, "object_id": "50", "object_repr": "Compare the working of stack and queue data structure.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 51, "fields": {"action_time": "2022-11-24T12:49:36.038Z", "user": 1, "content_type": 16, "object_id": "51", "object_repr": "Develop an algorithm for inserting a new element into the stack.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 52, "fields": {"action_time": "2022-11-24T12:50:05.435Z", "user": 1, "content_type": 16, "object_id": "52", "object_repr": "Define stack and queue.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 53, "fields": {"action_time": "2022-11-24T12:50:52.448Z", "user": 1, "content_type": 16, "object_id": "53", "object_repr": "List any four applications of stack.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 54, "fields": {"action_time": "2022-11-24T12:52:01.863Z", "user": 1, "content_type": 16, "object_id": "54", "object_repr": "Given the prefix for an expression. Write its postfix:", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 55, "fields": {"action_time": "2022-11-24T12:52:06.896Z", "user": 1, "content_type": 16, "object_id": "37", "object_repr": "Consider an array A[1: n] Given a position, write an algorithm to insert an element in the Array. If the position is empty, the element is inserted easily. If the position is already occupied the elem", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Question\"]}}]"}}, {"model": "admin.logentry", "pk": 56, "fields": {"action_time": "2022-11-24T12:53:12.863Z", "user": 1, "content_type": 16, "object_id": "55", "object_repr": "Describe how the following \"infix\" expression is evaluated with the help of", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 57, "fields": {"action_time": "2022-11-24T12:54:05.769Z", "user": 1, "content_type": 16, "object_id": "56", "object_repr": "Give the postfix and prefix forms of the expression:", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 58, "fields": {"action_time": "2022-11-24T12:54:38.701Z", "user": 1, "content_type": 16, "object_id": "57", "object_repr": "Define double ended queue.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 59, "fields": {"action_time": "2022-11-24T12:55:26.106Z", "user": 1, "content_type": 16, "object_id": "58", "object_repr": "List the applications of a queue.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 60, "fields": {"action_time": "2022-11-24T12:56:19.136Z", "user": 1, "content_type": 16, "object_id": "59", "object_repr": "What are the applications of priority queue?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 61, "fields": {"action_time": "2022-11-24T12:56:44.437Z", "user": 1, "content_type": 16, "object_id": "60", "object_repr": "What is circular queue?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 62, "fields": {"action_time": "2022-11-24T12:57:11.436Z", "user": 1, "content_type": 16, "object_id": "61", "object_repr": "Circular queue is better than standard linear queue, Why?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 63, "fields": {"action_time": "2022-11-24T12:57:35.646Z", "user": 1, "content_type": 16, "object_id": "62", "object_repr": "Classify the different types of queues.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 64, "fields": {"action_time": "2022-11-24T12:58:21.202Z", "user": 1, "content_type": 16, "object_id": "63", "object_repr": "Illustrate the difference between a queues and linked lists with an example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 65, "fields": {"action_time": "2022-11-24T12:58:49.087Z", "user": 1, "content_type": 16, "object_id": "64", "object_repr": "Complete a routine to display the contents of queue.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 66, "fields": {"action_time": "2022-11-24T12:59:02.204Z", "user": 1, "content_type": 16, "object_id": "65", "object_repr": "What is hashing?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 67, "fields": {"action_time": "2022-11-24T12:59:16.993Z", "user": 1, "content_type": 16, "object_id": "66", "object_repr": "Analyze and write a routine to check whether the queue is full or empty.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 68, "fields": {"action_time": "2022-11-24T13:00:12.579Z", "user": 1, "content_type": 16, "object_id": "67", "object_repr": "For railway reservation the queue data structure is preferred –Justify.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 69, "fields": {"action_time": "2022-11-24T13:00:51.384Z", "user": 1, "content_type": 16, "object_id": "68", "object_repr": "Develop an algorithm for deleting an element in a double ended queue.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 70, "fields": {"action_time": "2022-11-24T13:00:59.942Z", "user": 1, "content_type": 16, "object_id": "69", "object_repr": "Describe how the divide and conquer technique is implemented in binary search.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 71, "fields": {"action_time": "2022-11-24T13:01:19.383Z", "user": 1, "content_type": 16, "object_id": "70", "object_repr": "Describe with an example how to evaluate arithmetic expressions using stacks.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 72, "fields": {"action_time": "2022-11-24T13:01:35.869Z", "user": 1, "content_type": 16, "object_id": "71", "object_repr": "Describe the algorithm to sort the following array: 77, 33, 44, 11, 88, 22, 66,\r\n55 (Insertion sort)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 73, "fields": {"action_time": "2022-11-24T13:01:55.031Z", "user": 1, "content_type": 16, "object_id": "72", "object_repr": "Describe the algorithm to sort the following array: 77, 33, 44, 11, 88, 22, 66,\r\n55", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 74, "fields": {"action_time": "2022-11-24T13:01:58.276Z", "user": 1, "content_type": 16, "object_id": "73", "object_repr": "Explain array based implementation of stacks.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 75, "fields": {"action_time": "2022-11-24T13:02:12.648Z", "user": 1, "content_type": 16, "object_id": "72", "object_repr": "Describe the algorithm to sort the following array: 77, 33, 44, 11, 88, 22, 66,\r\n55 (Shell Sort)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Question\"]}}]"}}, {"model": "admin.logentry", "pk": 76, "fields": {"action_time": "2022-11-24T13:02:26.178Z", "user": 1, "content_type": 16, "object_id": "74", "object_repr": "Explain linked list implementation of stacks.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 77, "fields": {"action_time": "2022-11-24T13:03:02.691Z", "user": 1, "content_type": 16, "object_id": "75", "object_repr": "Describe about stack ADT in detail.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 78, "fields": {"action_time": "2022-11-24T13:03:41.085Z", "user": 1, "content_type": 16, "object_id": "76", "object_repr": "Explain any one application of stack.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 79, "fields": {"action_time": "2022-11-24T13:04:51.294Z", "user": 1, "content_type": 16, "object_id": "77", "object_repr": "Explain the following expressions with an example. \r\n  i.Prefix and infix", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 80, "fields": {"action_time": "2022-11-24T13:05:34.727Z", "user": 1, "content_type": 16, "object_id": "78", "object_repr": "Explain the following expressions with an example.\r\n i.Postfix.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 81, "fields": {"action_time": "2022-11-24T13:06:15.936Z", "user": 1, "content_type": 16, "object_id": "79", "object_repr": "Write an algorithm to convert an infix expression to a postfix expression. Trace the algorithm to convert the infix expression ‘(a+b)*c/d+e/f” to a postfix expression.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 82, "fields": {"action_time": "2022-11-24T13:06:59.440Z", "user": 1, "content_type": 16, "object_id": "80", "object_repr": "Justify the need for Infix and Postfix expression.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 83, "fields": {"action_time": "2022-11-24T13:07:55.141Z", "user": 1, "content_type": 16, "object_id": "81", "object_repr": "Give an algorithm for push and pop operations on stack using a linked list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 84, "fields": {"action_time": "2022-11-24T13:09:20.292Z", "user": 1, "content_type": 16, "object_id": "82", "object_repr": "Define extendible hashing.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 85, "fields": {"action_time": "2022-11-24T13:10:02.393Z", "user": 1, "content_type": 16, "object_id": "83", "object_repr": "Give the fastest searching algorithm.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 86, "fields": {"action_time": "2022-11-24T13:10:39.278Z", "user": 1, "content_type": 16, "object_id": "84", "object_repr": "What is meant by internal and external sorting? Give any two examples for each type.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 87, "fields": {"action_time": "2022-11-24T13:11:17.055Z", "user": 1, "content_type": 16, "object_id": "85", "object_repr": "Describe the complexity of bubble sort.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 88, "fields": {"action_time": "2022-11-24T13:11:52.013Z", "user": 1, "content_type": 16, "object_id": "86", "object_repr": "Name the applications of linear and binary search techniques.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 89, "fields": {"action_time": "2022-11-24T13:12:19.072Z", "user": 1, "content_type": 16, "object_id": "87", "object_repr": "Give the time complexities of bubble sort and quick sort.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 90, "fields": {"action_time": "2022-11-24T13:12:45.075Z", "user": 1, "content_type": 16, "object_id": "88", "object_repr": "Predict the fastest sorting algorithm, justify.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 91, "fields": {"action_time": "2022-11-24T13:13:45.488Z", "user": 1, "content_type": 16, "object_id": "89", "object_repr": "Compare internal and external sorting.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 92, "fields": {"action_time": "2022-11-24T13:14:12.867Z", "user": 1, "content_type": 16, "object_id": "90", "object_repr": "Distinguish between linear and binary search technique.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 93, "fields": {"action_time": "2022-11-24T13:14:57.750Z", "user": 1, "content_type": 16, "object_id": "91", "object_repr": "Classify the different sorting methods.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 94, "fields": {"action_time": "2022-11-24T13:15:26.204Z", "user": 1, "content_type": 16, "object_id": "92", "object_repr": "Develop an algorithm for a quick sort.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 95, "fields": {"action_time": "2022-11-24T13:15:56.996Z", "user": 1, "content_type": 16, "object_id": "93", "object_repr": "Which hashing technique is best and illustrate with an example?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 96, "fields": {"action_time": "2022-11-24T13:16:22.545Z", "user": 1, "content_type": 16, "object_id": "94", "object_repr": "Summarize the open addressing hashing method with an example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 97, "fields": {"action_time": "2022-11-24T13:16:43.564Z", "user": 1, "content_type": 16, "object_id": "95", "object_repr": "Point out the advantages of using quick sort.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 98, "fields": {"action_time": "2022-11-24T13:17:17.706Z", "user": 1, "content_type": 16, "object_id": "96", "object_repr": "Compare the working of linear and binary search techniques.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 99, "fields": {"action_time": "2022-11-24T13:17:48.777Z", "user": 1, "content_type": 16, "object_id": "97", "object_repr": "Select the best sorting method out of the following - insertion sort, quick sort and merge sort and give justification.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 100, "fields": {"action_time": "2022-11-24T13:17:49.210Z", "user": 1, "content_type": 16, "object_id": "98", "object_repr": "Describe the process of postfix expression evaluation with an example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 101, "fields": {"action_time": "2022-11-24T13:18:07.545Z", "user": 1, "content_type": 16, "object_id": "99", "object_repr": "Illustrate the time complexity of insertion sort with an example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 102, "fields": {"action_time": "2022-11-24T13:18:27.637Z", "user": 1, "content_type": 16, "object_id": "100", "object_repr": "Describe the process of conversion from infix expression to postfix expression using stack.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 103, "fields": {"action_time": "2022-11-24T13:18:30.973Z", "user": 1, "content_type": 16, "object_id": "101", "object_repr": "Identify the advantage of shell sort over insertion sort.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 104, "fields": {"action_time": "2022-11-24T13:18:55.370Z", "user": 1, "content_type": 16, "object_id": "102", "object_repr": "What is a graph and its types?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 105, "fields": {"action_time": "2022-11-24T13:18:56.110Z", "user": 1, "content_type": 16, "object_id": "103", "object_repr": "Develop a simple algorithm for a linear search.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 106, "fields": {"action_time": "2022-11-24T13:19:14.738Z", "user": 1, "content_type": 16, "object_id": "104", "object_repr": "Write an algorithm that checks if expression is correctly parenthesized using stack and illustrate with an example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 107, "fields": {"action_time": "2022-11-24T13:20:03.691Z", "user": 1, "content_type": 16, "object_id": "105", "object_repr": "Write the function to examine whether the stack is full() or empty().", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 108, "fields": {"action_time": "2022-11-24T13:20:59.070Z", "user": 1, "content_type": 16, "object_id": "106", "object_repr": "Create a complete undirected graph having five nodes", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 109, "fields": {"action_time": "2022-11-24T13:21:12.009Z", "user": 1, "content_type": 16, "object_id": "107", "object_repr": "Describe about queue ADT in detail.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 110, "fields": {"action_time": "2022-11-24T13:21:21.736Z", "user": 1, "content_type": 16, "object_id": "108", "object_repr": "When do you say a graph is bi-connected?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 111, "fields": {"action_time": "2022-11-24T13:21:30.934Z", "user": 1, "content_type": 16, "object_id": "109", "object_repr": "List the different types of hashing techniques?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 112, "fields": {"action_time": "2022-11-24T13:21:36.050Z", "user": 1, "content_type": 16, "object_id": "110", "object_repr": "Explain any one application of queue with suitable example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 113, "fields": {"action_time": "2022-11-24T13:21:40.179Z", "user": 1, "content_type": 16, "object_id": "111", "object_repr": "Give the purpose of Dijikstra’s algorithm.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 114, "fields": {"action_time": "2022-11-24T13:21:59.304Z", "user": 1, "content_type": 16, "object_id": "112", "object_repr": "Explain them in detail with an Example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 115, "fields": {"action_time": "2022-11-24T13:22:00.534Z", "user": 1, "content_type": 16, "object_id": "113", "object_repr": "Differentiate cyclic and acyclic graph", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 116, "fields": {"action_time": "2022-11-24T13:22:00.845Z", "user": 1, "content_type": 16, "object_id": "114", "object_repr": "Briefly describe the operations of queue with examples.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 117, "fields": {"action_time": "2022-11-24T13:22:17.363Z", "user": 1, "content_type": 16, "object_id": "115", "object_repr": "Classify strongly connected and weakly connected graph.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 118, "fields": {"action_time": "2022-11-24T13:22:30.528Z", "user": 1, "content_type": 16, "object_id": "116", "object_repr": "Analyze and write an algorithm to implement queue functions using arrays.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 119, "fields": {"action_time": "2022-11-24T13:22:33.124Z", "user": 1, "content_type": 16, "object_id": "117", "object_repr": "How to find all articulation points in a given graph?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 120, "fields": {"action_time": "2022-11-24T13:22:33.488Z", "user": 1, "content_type": 16, "object_id": "118", "object_repr": "Interpret the result of inserting the keys 2, 3, 5, 7, 11, 13, 15, 6, 4 into an initially empty extendible hashing data structure with M = 3.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 121, "fields": {"action_time": "2022-11-24T13:22:45.483Z", "user": 1, "content_type": 16, "object_id": "119", "object_repr": "Define the length of the graph.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 122, "fields": {"action_time": "2022-11-24T13:22:55.514Z", "user": 1, "content_type": 16, "object_id": "120", "object_repr": "Develop an algorithm to perform the four operations in a double ended queue\r\nthat is implemented as an array.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 123, "fields": {"action_time": "2022-11-24T13:22:58.829Z", "user": 1, "content_type": 16, "object_id": "121", "object_repr": "Define minimum spanning tree. Give an example", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 124, "fields": {"action_time": "2022-11-24T13:23:03.305Z", "user": 1, "content_type": 16, "object_id": "122", "object_repr": "Discuss the running time of Divide-and-Conquer Merge sort algorithm.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 125, "fields": {"action_time": "2022-11-24T13:23:22.008Z", "user": 1, "content_type": 16, "object_id": "123", "object_repr": "State the principle of Topological sorting.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 126, "fields": {"action_time": "2022-11-24T13:23:24.208Z", "user": 1, "content_type": 16, "object_id": "124", "object_repr": "Discuss circular queue and its implementation.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 127, "fields": {"action_time": "2022-11-24T13:23:35.067Z", "user": 1, "content_type": 16, "object_id": "125", "object_repr": "Explain procedure for Depth first search algorithm.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 128, "fields": {"action_time": "2022-11-24T13:23:36.768Z", "user": 1, "content_type": 16, "object_id": "126", "object_repr": "Sort the sequence 3, 1, 4, 1, 5, 9, 2, 6, 5 using Insertion sort.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 129, "fields": {"action_time": "2022-11-24T13:23:50.806Z", "user": 1, "content_type": 16, "object_id": "127", "object_repr": "Analyze Bi-connectivity.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 130, "fields": {"action_time": "2022-11-24T13:23:54.261Z", "user": 1, "content_type": 16, "object_id": "128", "object_repr": "Illustrate the enqueue and dequeue operations on double ended queues.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 131, "fields": {"action_time": "2022-11-24T13:24:01.518Z", "user": 1, "content_type": 16, "object_id": "129", "object_repr": "Describe the routine for insertion sort.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 132, "fields": {"action_time": "2022-11-24T13:24:30.907Z", "user": 1, "content_type": 16, "object_id": "130", "object_repr": "Prove that the number of edges in a complete graph of n vertices in n(n-1)/2", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 133, "fields": {"action_time": "2022-11-24T13:24:37.915Z", "user": 1, "content_type": 16, "object_id": "131", "object_repr": "Develop and Show the simulation using stack for the following expression : 12 + 3 * 14 – (5 * 16) + 7 .", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 134, "fields": {"action_time": "2022-11-24T13:24:50.002Z", "user": 1, "content_type": 16, "object_id": "132", "object_repr": "Write an algorithm to sort a set of ‘N’ numbers using quick sort. Demonstrate the algorithm for the following set of numbers: 88,11,22,44,66,99,32,67,54,10.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 135, "fields": {"action_time": "2022-11-24T13:25:21.096Z", "user": 1, "content_type": 16, "object_id": "133", "object_repr": "Explain the various collision resolution techniques in detail with an example", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 136, "fields": {"action_time": "2022-11-24T13:25:22.167Z", "user": 1, "content_type": 16, "object_id": "134", "object_repr": "Explain an algorithm to implement the circular queue using arrays.  List the applications of Queues.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 137, "fields": {"action_time": "2022-11-24T13:26:04.955Z", "user": 1, "content_type": 16, "object_id": "135", "object_repr": "Assess the difference between double ended queue and circular queue.\r\nShow the simulation using stack for the following expression to convert infix to postpix : p * q = (r-s / t).", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 138, "fields": {"action_time": "2022-11-24T13:26:08.823Z", "user": 1, "content_type": 16, "object_id": "136", "object_repr": "In a complete graph with n vertices, show that the number of spanning trees is at least 2^n-1 - 1", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 139, "fields": {"action_time": "2022-11-24T13:26:10.395Z", "user": 1, "content_type": 16, "object_id": "137", "object_repr": "Compare the below different Sorting methods and discuss about each method in a very detailed Manner.\r\ni.Bucket Sort.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 140, "fields": {"action_time": "2022-11-24T13:26:30.829Z", "user": 1, "content_type": 16, "object_id": "136", "object_repr": "In a complete graph with n vertices, show that the number of spanning trees is at least 2^n-1 - 1", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 141, "fields": {"action_time": "2022-11-24T13:26:49.798Z", "user": 1, "content_type": 16, "object_id": "138", "object_repr": "Develop an algorithm to explain Priority Queue, deQueue and the applications of queues.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 142, "fields": {"action_time": "2022-11-24T13:26:56.339Z", "user": 1, "content_type": 16, "object_id": "139", "object_repr": "Compare the below different Sorting methods and discuss about each method in a very detailed Manner.\r\nii.Selection Sort", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 143, "fields": {"action_time": "2022-11-24T13:27:14.473Z", "user": 1, "content_type": 16, "object_id": "140", "object_repr": "What are Euler circuits?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 144, "fields": {"action_time": "2022-11-24T13:27:31.177Z", "user": 1, "content_type": 16, "object_id": "141", "object_repr": "Sort the given integers and Explain the intermediate results using shell sort: 35,12,14,9,15,45,32,95,40,5.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 145, "fields": {"action_time": "2022-11-24T13:28:01.882Z", "user": 1, "content_type": 16, "object_id": "142", "object_repr": "Write and Explain a C code to sort an integer array.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 146, "fields": {"action_time": "2022-11-24T13:28:18.001Z", "user": 1, "content_type": 16, "object_id": "143", "object_repr": "Give two applications of graphs.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 147, "fields": {"action_time": "2022-11-24T13:28:28.107Z", "user": 1, "content_type": 16, "object_id": "144", "object_repr": "Create a algorithm to perform a binary Search.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 148, "fields": {"action_time": "2022-11-24T13:28:31.932Z", "user": 1, "content_type": 16, "object_id": "145", "object_repr": "What is residual graph?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 149, "fields": {"action_time": "2022-11-24T13:28:52.367Z", "user": 1, "content_type": 16, "object_id": "146", "object_repr": "Develop an algorithm for Merge sort with an example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 150, "fields": {"action_time": "2022-11-24T13:29:37.498Z", "user": 1, "content_type": 16, "object_id": "147", "object_repr": "Write short notes on Bubble Sort.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 151, "fields": {"action_time": "2022-11-24T13:30:02.534Z", "user": 1, "content_type": 16, "object_id": "148", "object_repr": "Illustrate an algorithm to sort the elements using bubble sort.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 152, "fields": {"action_time": "2022-11-24T13:30:09.634Z", "user": 1, "content_type": 16, "object_id": "149", "object_repr": "Describe in detail about the following representations of a graph.\r\ni. Adjacency Matrix", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 153, "fields": {"action_time": "2022-11-24T13:30:38.090Z", "user": 1, "content_type": 16, "object_id": "150", "object_repr": "Describe the following collision resolution techniques in detail with an example.\r\ni.Separate chaining.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 154, "fields": {"action_time": "2022-11-24T13:30:43.808Z", "user": 1, "content_type": 16, "object_id": "151", "object_repr": "Describe in detail about the following representations of a graph.\r\ni. Adjacency List", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 155, "fields": {"action_time": "2022-11-24T13:31:09.706Z", "user": 1, "content_type": 16, "object_id": "152", "object_repr": "Describe the following collision resolution techniques in detail with an example.\r\nii.Rehashing.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 156, "fields": {"action_time": "2022-11-24T13:31:13.043Z", "user": 1, "content_type": 16, "object_id": "153", "object_repr": "Explain the topological sorting of a graph G with example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 157, "fields": {"action_time": "2022-11-24T13:31:33.113Z", "user": 1, "content_type": 16, "object_id": "154", "object_repr": "Quote the step wise procedure for topological sort", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 158, "fields": {"action_time": "2022-11-24T13:31:47.518Z", "user": 1, "content_type": 16, "object_id": "155", "object_repr": "Differentiate depth-first search and breadth-first search traversal of a graph with suitable examples.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 159, "fields": {"action_time": "2022-11-24T13:31:50.260Z", "user": 1, "content_type": 16, "object_id": "156", "object_repr": "Explain different hashing technique.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 160, "fields": {"action_time": "2022-11-24T13:32:12.839Z", "user": 1, "content_type": 16, "object_id": "157", "object_repr": "Explain the rehashing technique with suitable example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 161, "fields": {"action_time": "2022-11-24T13:32:34.754Z", "user": 1, "content_type": 16, "object_id": "158", "object_repr": "Describe the open addressing and chaining methods of collusion resolution techniques in hashing.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 162, "fields": {"action_time": "2022-11-24T13:33:04.913Z", "user": 1, "content_type": 16, "object_id": "159", "object_repr": "Develop an algorithm to search a number in a given set of numbers using binary search. Develop and algorithm to explain Extendible Hashing.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 163, "fields": {"action_time": "2022-11-24T13:33:33.784Z", "user": 1, "content_type": 16, "object_id": "160", "object_repr": "Explain a C code to sort an integer array using Selection Sort and Radix Sort.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 164, "fields": {"action_time": "2022-11-24T13:33:44.487Z", "user": 1, "content_type": 16, "object_id": "161", "object_repr": "Explain with algorithm, How DFS be performed on a undirected graph.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 165, "fields": {"action_time": "2022-11-24T13:34:00.387Z", "user": 1, "content_type": 16, "object_id": "162", "object_repr": "Show the algorithm for finding connected components of an undirected\r\ngraph using DFS, and derive the time complexity of the algorithm.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 166, "fields": {"action_time": "2022-11-24T13:34:07.988Z", "user": 1, "content_type": 16, "object_id": "163", "object_repr": "Explain an algorithm for Shell Sort and Merge Sort and explain with example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 167, "fields": {"action_time": "2022-11-24T13:34:18.408Z", "user": 1, "content_type": 16, "object_id": "164", "object_repr": "Discuss an algorithm for Breadth first Search on a graph.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 168, "fields": {"action_time": "2022-11-24T13:34:37.022Z", "user": 1, "content_type": 16, "object_id": "165", "object_repr": "Give an example based on the algorithm.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 169, "fields": {"action_time": "2022-11-24T13:35:02.766Z", "user": 1, "content_type": 16, "object_id": "166", "object_repr": "Prepare a quick sort algorithm and explain with suitable example Give its worst case, average case and best case time complexities.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 170, "fields": {"action_time": "2022-11-24T13:36:19.570Z", "user": 1, "content_type": 16, "object_id": "167", "object_repr": "If the depth of the binary tree is k, the maximum number of nodes in the\r\nbinary tree is 2k-1.Justify", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 171, "fields": {"action_time": "2022-11-24T13:36:24.055Z", "user": 1, "content_type": 16, "object_id": "167", "object_repr": "If the depth of the binary tree is k, the maximum number of nodes in the\r\nbinary tree is 2k-1.Justify", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 172, "fields": {"action_time": "2022-11-24T13:37:10.900Z", "user": 1, "content_type": 16, "object_id": "168", "object_repr": "Define a fully binary tree.Give an example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 173, "fields": {"action_time": "2022-11-24T13:40:49.794Z", "user": 1, "content_type": 10, "object_id": "3", "object_repr": "Trees | CS3351 | Data Structures | IDK", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 174, "fields": {"action_time": "2022-11-24T13:41:26.813Z", "user": 1, "content_type": 10, "object_id": "3", "object_repr": "Trees | CS3351 | Data Structures | IDK", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 175, "fields": {"action_time": "2022-11-24T13:44:27.570Z", "user": 1, "content_type": 16, "object_id": "169", "object_repr": "Create an expression tree for the expression.a*(b+c)+((d+e*f)*g)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 176, "fields": {"action_time": "2022-11-24T13:44:32.682Z", "user": 1, "content_type": 16, "object_id": "169", "object_repr": "Create an expression tree for the expression.a*(b+c)+((d+e*f)*g)", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 177, "fields": {"action_time": "2022-11-24T13:45:37.511Z", "user": 1, "content_type": 16, "object_id": "170", "object_repr": "Illustrate Kruskal’s algorithm to find the minimum spanning tree of a graph.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 178, "fields": {"action_time": "2022-11-24T13:45:44.281Z", "user": 1, "content_type": 16, "object_id": "171", "object_repr": "How does the AVL tree differ from binary search tree?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 179, "fields": {"action_time": "2022-11-24T13:45:57.553Z", "user": 1, "content_type": 16, "object_id": "172", "object_repr": "Compare any two applications of Graph with your own example", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 180, "fields": {"action_time": "2022-11-24T13:46:27.475Z", "user": 1, "content_type": 16, "object_id": "173", "object_repr": "Describe any one of the shortest path algorithms with suitable example", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 181, "fields": {"action_time": "2022-11-24T13:46:39.396Z", "user": 1, "content_type": 16, "object_id": "174", "object_repr": "What are the various rotations in AVL trees?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 182, "fields": {"action_time": "2022-11-24T13:46:49.238Z", "user": 1, "content_type": 16, "object_id": "175", "object_repr": "Discuss the prims algorithm for minmum spanning tree.Give an example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 183, "fields": {"action_time": "2022-11-24T13:47:33.328Z", "user": 1, "content_type": 16, "object_id": "176", "object_repr": "List the applications of trees.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 184, "fields": {"action_time": "2022-11-24T13:47:33.633Z", "user": 1, "content_type": 16, "object_id": "177", "object_repr": "Develop an algorithm to compute the shortest path using Dijkstra’s algorithm. Validate the algorithm with suitable example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 185, "fields": {"action_time": "2022-11-24T13:47:57.425Z", "user": 1, "content_type": 16, "object_id": "178", "object_repr": "Explain the depth first approach of finding articulation points in a connected graph with necessary algorithm.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 186, "fields": {"action_time": "2022-11-24T13:48:35.513Z", "user": 1, "content_type": 16, "object_id": "179", "object_repr": "Write short notes on Bi-connectivity.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 187, "fields": {"action_time": "2022-11-24T13:48:54.238Z", "user": 1, "content_type": 16, "object_id": "180", "object_repr": "Express different types of graphs with example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 188, "fields": {"action_time": "2022-11-24T13:49:21.966Z", "user": 1, "content_type": 16, "object_id": "181", "object_repr": "Given the adjacency matrix of a graph, write a program to calculate the in- degree and the out-degree of a node N in the graph.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 189, "fields": {"action_time": "2022-11-24T13:49:23.311Z", "user": 1, "content_type": 16, "object_id": "182", "object_repr": "What are threaded binary trees? Give its advantages", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 190, "fields": {"action_time": "2022-11-24T13:49:42.864Z", "user": 1, "content_type": 16, "object_id": "183", "object_repr": "How can we efficiently check whether or not a graph is disconnected?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 191, "fields": {"action_time": "2022-11-24T13:49:56.773Z", "user": 1, "content_type": 16, "object_id": "184", "object_repr": "Describe an algorithm that uses a brute force approach to find all the articulation points in G in O(V (V + E)) time.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 192, "fields": {"action_time": "2022-11-24T13:50:16.027Z", "user": 1, "content_type": 16, "object_id": "185", "object_repr": "Given a rooted tree, one desires to find the shortest path from the root to a given node v. Which algorithm would one use to find this shortest path.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 193, "fields": {"action_time": "2022-11-24T13:50:26.536Z", "user": 1, "content_type": 16, "object_id": "186", "object_repr": "9\tDefine balance factor of AVL Tree.\tBT 1\tRemember", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 194, "fields": {"action_time": "2022-11-24T13:50:38.020Z", "user": 1, "content_type": 16, "object_id": "187", "object_repr": "Write a program to determine whether there is at least one path from the source to the destination.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 195, "fields": {"action_time": "2022-11-24T13:50:53.257Z", "user": 1, "content_type": 16, "object_id": "188", "object_repr": "How do we calculate the balance factor for each node in a AVL tree?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 196, "fields": {"action_time": "2022-11-24T13:51:31.574Z", "user": 1, "content_type": 16, "object_id": "189", "object_repr": "Simulate the result of inserting 3,1,4,6,2,8,9 into an initially empty AVL Tree.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 197, "fields": {"action_time": "2022-11-24T13:51:51.752Z", "user": 1, "content_type": 19, "object_id": "1", "object_repr": "2021 | 3 | UG | BE | CSE | 1 | Lists | CS3351 | Data Structures | IDK", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 198, "fields": {"action_time": "2022-11-24T13:51:56.918Z", "user": 1, "content_type": 19, "object_id": "2", "object_repr": "2021 | 3 | UG | BE | CSE | 2 | Stacks and Queues | CS3351 | Data Structures | IDK", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 199, "fields": {"action_time": "2022-11-24T13:52:06.435Z", "user": 1, "content_type": 16, "object_id": "190", "object_repr": "12\tGive an example for expression tree.\tBT 2\tUnderstand", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 200, "fields": {"action_time": "2022-11-24T13:52:11.268Z", "user": 1, "content_type": 19, "object_id": "3", "object_repr": "2021 | 3 | UG | BE | CSE | 3 | Graphs | CS3351 | Data Structures | IDK", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 201, "fields": {"action_time": "2022-11-24T13:52:19.833Z", "user": 1, "content_type": 19, "object_id": "4", "object_repr": "2021 | 3 | UG | BE | CSE | 4 | Sorting, Searching and Hash Techniques | CS3351 | Data Structures | IDK", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 202, "fields": {"action_time": "2022-11-24T13:52:28.717Z", "user": 1, "content_type": 19, "object_id": "5", "object_repr": "2021 | 3 | UG | BE | CSE | 5 | Trees | CS3351 | Data Structures | IDK", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 203, "fields": {"action_time": "2022-11-24T13:52:38.955Z", "user": 1, "content_type": 16, "object_id": "191", "object_repr": "Number the following binary tree to traverse it in i.Preorder\r\nii.Inorder", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 204, "fields": {"action_time": "2022-11-24T13:53:20.518Z", "user": 1, "content_type": 16, "object_id": "192", "object_repr": "Explain why binary search cannot be performed on a linked list.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 205, "fields": {"action_time": "2022-11-24T13:54:20.215Z", "user": 1, "content_type": 16, "object_id": "193", "object_repr": "How do you calculate the depth of a B-Tree?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 206, "fields": {"action_time": "2022-11-24T13:55:01.572Z", "user": 1, "content_type": 16, "object_id": "194", "object_repr": "List out the various operations that can be performed on B-trees", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 207, "fields": {"action_time": "2022-11-24T13:55:32.460Z", "user": 1, "content_type": 16, "object_id": "195", "object_repr": "List out the properties of B+ -Trees", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 208, "fields": {"action_time": "2022-11-24T13:56:02.085Z", "user": 1, "content_type": 16, "object_id": "196", "object_repr": "Illustrate the steps in the construction of a heap of records with the following key values:12,33,67,8,7,80,5,23", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 209, "fields": {"action_time": "2022-11-24T13:56:38.533Z", "user": 1, "content_type": 16, "object_id": "197", "object_repr": "Analyze the properties of binary heap.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 210, "fields": {"action_time": "2022-11-24T13:57:30.232Z", "user": 1, "content_type": 16, "object_id": "198", "object_repr": "Define a heap and show how it can be used to represent a priority queue", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 211, "fields": {"action_time": "2022-11-24T13:59:29.040Z", "user": 1, "content_type": 16, "object_id": "199", "object_repr": "Write an algorithm for preorder, inorder and postorder traversal of a binary tree.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 212, "fields": {"action_time": "2022-11-24T14:00:27.506Z", "user": 1, "content_type": 16, "object_id": "200", "object_repr": "Explain the following operations on a binary search tree with suitable algorithms\r\ni.\tFind a node", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 213, "fields": {"action_time": "2022-11-24T14:01:25.238Z", "user": 1, "content_type": 16, "object_id": "201", "object_repr": "Explain the following operations on a binary search tree with suitable algorithms\r\n\r\ni.\tFind the minimum and maximum elements of binary search tree", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 214, "fields": {"action_time": "2022-11-24T14:01:56.886Z", "user": 1, "content_type": 16, "object_id": "202", "object_repr": "i.\tWrite short notes on threaded binary tree", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 215, "fields": {"action_time": "2022-11-24T14:02:39.204Z", "user": 1, "content_type": 16, "object_id": "203", "object_repr": "Describe an iterative algorithm to traverse a tree in preorder", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 216, "fields": {"action_time": "2022-11-24T14:03:16.565Z", "user": 1, "content_type": 16, "object_id": "204", "object_repr": "Write an algorithm for inserting and deleting a node in a binary search tree.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 217, "fields": {"action_time": "2022-11-24T14:03:56.808Z", "user": 1, "content_type": 16, "object_id": "205", "object_repr": "Discuss in detail the various methods in which a binary tree can be represented. Discuss the advantage and disadvantage of each method", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 218, "fields": {"action_time": "2022-11-24T14:05:33.719Z", "user": 1, "content_type": 16, "object_id": "202", "object_repr": "Write short notes on threaded binary tree", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Question\"]}}]"}}, {"model": "admin.logentry", "pk": 219, "fields": {"action_time": "2022-11-24T14:05:52.063Z", "user": 1, "content_type": 16, "object_id": "190", "object_repr": "Give an example for expression tree.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Question\"]}}]"}}, {"model": "admin.logentry", "pk": 220, "fields": {"action_time": "2022-11-24T14:05:56.911Z", "user": 1, "content_type": 16, "object_id": "206", "object_repr": "Explain the B+ tree and its properties with an Example", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 221, "fields": {"action_time": "2022-11-24T14:06:10.058Z", "user": 1, "content_type": 16, "object_id": "186", "object_repr": "Define balance factor of AVL Tree.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Question\"]}}]"}}, {"model": "admin.logentry", "pk": 222, "fields": {"action_time": "2022-11-24T14:06:13.532Z", "user": 1, "content_type": 16, "object_id": "186", "object_repr": "Define balance factor of AVL Tree.", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 223, "fields": {"action_time": "2022-11-24T14:07:10.039Z", "user": 1, "content_type": 16, "object_id": "207", "object_repr": "What are the steps to convert general tree to binary tree?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 224, "fields": {"action_time": "2022-11-24T14:07:48.541Z", "user": 1, "content_type": 16, "object_id": "208", "object_repr": "i.\tConstruct B Tree to insert the following key elements(order of the tree is 3) 5,2,13,3,45,72,4,6,9,22", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 225, "fields": {"action_time": "2022-11-24T14:09:20.348Z", "user": 1, "content_type": 16, "object_id": "209", "object_repr": "ii.\tDraw a B Tree of order 6", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 226, "fields": {"action_time": "2022-11-24T14:10:09.743Z", "user": 1, "content_type": 16, "object_id": "210", "object_repr": "Discuss how to insert an element in a AVL tree, Explain with algorithm.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 227, "fields": {"action_time": "2022-11-24T14:10:47.731Z", "user": 1, "content_type": 16, "object_id": "211", "object_repr": "Explain how deletion can take place in AVL trees with suitable algorithms", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 228, "fields": {"action_time": "2022-11-24T14:11:23.983Z", "user": 1, "content_type": 16, "object_id": "212", "object_repr": "i.\tWhat are AVL trees? Describe the different rotations defined for AVL tree.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 229, "fields": {"action_time": "2022-11-24T14:12:28.090Z", "user": 1, "content_type": 16, "object_id": "213", "object_repr": "ii.\tInsert the following elements step by step in sequence into an empty AVL\r\ntree 15,18,20,21,28,2330,26", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 230, "fields": {"action_time": "2022-11-24T14:13:41.419Z", "user": 1, "content_type": 16, "object_id": "214", "object_repr": "Point out the operations of B-tree using 2-3 tree.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 231, "fields": {"action_time": "2022-11-24T14:13:49.451Z", "user": 1, "content_type": 16, "object_id": "208", "object_repr": "Construct B Tree to insert the following key elements(order of the tree is 3) 5,2,13,3,45,72,4,6,9,22", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Question\"]}}]"}}, {"model": "admin.logentry", "pk": 232, "fields": {"action_time": "2022-11-24T14:13:59.120Z", "user": 1, "content_type": 16, "object_id": "209", "object_repr": "Draw a B Tree of order 6", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Question\"]}}]"}}, {"model": "admin.logentry", "pk": 233, "fields": {"action_time": "2022-11-24T14:14:11.198Z", "user": 1, "content_type": 16, "object_id": "212", "object_repr": "What are AVL trees? Describe the different rotations defined for AVL tree.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Question\"]}}]"}}, {"model": "admin.logentry", "pk": 234, "fields": {"action_time": "2022-11-24T14:14:18.588Z", "user": 1, "content_type": 16, "object_id": "213", "object_repr": "Insert the following elements step by step in sequence into an empty AVL\r\ntree 15,18,20,21,28,2330,26", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Question\"]}}]"}}, {"model": "admin.logentry", "pk": 235, "fields": {"action_time": "2022-11-24T14:14:23.405Z", "user": 1, "content_type": 16, "object_id": "215", "object_repr": "Explain the operations of threaded binary tree.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 236, "fields": {"action_time": "2022-11-24T14:15:29.219Z", "user": 1, "content_type": 16, "object_id": "216", "object_repr": "Discuss the different traversal technique in binary tree with suitable algorithms and examples?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 237, "fields": {"action_time": "2022-11-24T14:16:13.775Z", "user": 1, "content_type": 16, "object_id": "217", "object_repr": "Explain the construction of expression tree with example.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 238, "fields": {"action_time": "2022-11-24T14:17:00.069Z", "user": 1, "content_type": 16, "object_id": "218", "object_repr": "Give the applications of trees", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 239, "fields": {"action_time": "2022-11-24T14:17:30.792Z", "user": 1, "content_type": 16, "object_id": "219", "object_repr": "i.\tShow the result of inserting 15,17,6,19,11,10,13,20,8,14,12 one at a time into an initially empty binary min heap.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 240, "fields": {"action_time": "2022-11-24T14:18:12.574Z", "user": 1, "content_type": 16, "object_id": "220", "object_repr": "ii.\tShow the result of performing three delete min operations in the final binary min heap obtained", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 241, "fields": {"action_time": "2022-11-24T14:18:32.849Z", "user": 1, "content_type": 16, "object_id": "219", "object_repr": "Show the result of inserting 15,17,6,19,11,10,13,20,8,14,12 one at a time into an initially empty binary min heap.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Question\"]}}]"}}, {"model": "admin.logentry", "pk": 242, "fields": {"action_time": "2022-11-24T14:18:41.049Z", "user": 1, "content_type": 16, "object_id": "220", "object_repr": "Show the result of performing three delete min operations in the final binary min heap obtained", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Question\"]}}]"}}, {"model": "admin.logentry", "pk": 243, "fields": {"action_time": "2022-11-24T14:19:58.455Z", "user": 1, "content_type": 16, "object_id": "221", "object_repr": "Illustrate How delete operation performed on binary heap?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 244, "fields": {"action_time": "2022-11-24T14:20:43.804Z", "user": 1, "content_type": 16, "object_id": "222", "object_repr": "ii.\tWrite a suitable operations for procolate up and percolate down operations in a binary heap", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 245, "fields": {"action_time": "2022-11-24T14:20:55.404Z", "user": 1, "content_type": 16, "object_id": "222", "object_repr": "Write a suitable operations for procolate up and percolate down operations in a binary heap", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Question\"]}}]"}}, {"model": "admin.logentry", "pk": 246, "fields": {"action_time": "2022-11-24T14:21:41.683Z", "user": 1, "content_type": 16, "object_id": "223", "object_repr": "Compare B trees with B+ trees.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 247, "fields": {"action_time": "2022-11-24T14:22:26.185Z", "user": 1, "content_type": 16, "object_id": "224", "object_repr": "Create a B+ tree of order 5 for the following data arriving in sequence:\r\n90, 27, 7, 9, 18, 21, 3, 4, 16, 11, 21, 72", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 248, "fields": {"action_time": "2022-11-24T14:23:58.581Z", "user": 1, "content_type": 16, "object_id": "225", "object_repr": "Draw B – Tree pf order m = 5 for the keys\r\n{K, O,S,V,MF,B,G,T,U,W}", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 249, "fields": {"action_time": "2022-11-24T14:25:05.383Z", "user": 1, "content_type": 16, "object_id": "226", "object_repr": "Delete the keys K and G in order.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 250, "fields": {"action_time": "2022-11-24T14:25:59.939Z", "user": 1, "content_type": 16, "object_id": "227", "object_repr": "Justify the number of splits needed for inserts / delete with proper reasons.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 251, "fields": {"action_time": "2022-11-24T14:31:10.044Z", "user": 1, "content_type": 16, "object_id": "226", "object_repr": "1)Draw B – Tree pf order m = 5 for the keys\r\n{K, O,S,V,MF,B,G,T,U,W}\r\n2)Delete the keys K and G in order.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Question\", \"Mark\"]}}]"}}, {"model": "admin.logentry", "pk": 252, "fields": {"action_time": "2022-11-24T14:32:17.393Z", "user": 1, "content_type": 16, "object_id": "227", "object_repr": "i.\tDraw B – Tree pf order m = 5 for the keys\r\n{K, O,S,V,MF,B,G,T,U,W}\t\r\nii.\tDelete the keys K and G in order. \r\niii.\tJustify the number of splits needed for inserts / delete with proper reasons.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Question\", \"Mark\"]}}]"}}, {"model": "admin.logentry", "pk": 285, "fields": {"action_time": "2022-11-24T15:06:05.816Z", "user": 1, "content_type": 16, "object_id": "228", "object_repr": "dummy", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 286, "fields": {"action_time": "2022-11-24T15:06:28.092Z", "user": 1, "content_type": 16, "object_id": "229", "object_repr": "dummy", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 287, "fields": {"action_time": "2022-11-24T15:11:16.013Z", "user": 1, "content_type": 16, "object_id": "229", "object_repr": "dummy", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 288, "fields": {"action_time": "2022-11-24T15:11:16.027Z", "user": 1, "content_type": 16, "object_id": "228", "object_repr": "dummy", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 289, "fields": {"action_time": "2022-11-24T15:14:31.007Z", "user": 1, "content_type": 16, "object_id": "230", "object_repr": "Consider the binary search tree given below.\r\nFind the result of in-order, pre-order, and post-order traversals. Show the deletion of the root node\r\nInsert 11, 22, 33, 44, 55, 66, and 77 in the tree", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 290, "fields": {"action_time": "2022-11-24T17:24:18.753Z", "user": 1, "content_type": 16, "object_id": "230", "object_repr": "Consider the binary search tree given below.\r\nFind the result of in-order, pre-order, and post-order traversals. Show the deletion of the root node\r\nInsert 11, 22, 33, 44, 55, 66, and 77 in the tree", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 291, "fields": {"action_time": "2022-11-24T17:29:22.112Z", "user": 1, "content_type": 16, "object_id": "181", "object_repr": "Given the adjacency matrix of a graph, write a program to calculate the in- degree and the out-degree of a node N in the graph.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Previous years\"]}}]"}}, {"model": "admin.logentry", "pk": 292, "fields": {"action_time": "2022-11-24T17:31:35.466Z", "user": 1, "content_type": 16, "object_id": "181", "object_repr": "Given the adjacency matrix of a graph, write a program to calculate the in- degree and the out-degree of a node N in the graph.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Previous years\"]}}]"}}, {"model": "admin.logentry", "pk": 293, "fields": {"action_time": "2022-11-24T17:37:27.835Z", "user": 1, "content_type": 16, "object_id": "181", "object_repr": "Given the adjacency matrix of a graph, write a program to calculate the in- degree and the out-degree of a node N in the graph.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Previous years\"]}}]"}}, {"model": "admin.logentry", "pk": 294, "fields": {"action_time": "2022-11-24T17:57:33.679Z", "user": 1, "content_type": 16, "object_id": "160", "object_repr": "Explain a C code to sort an integer array using Selection Sort and Radix Sort.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Previous years\"]}}]"}}, {"model": "admin.logentry", "pk": 295, "fields": {"action_time": "2022-11-24T17:59:24.339Z", "user": 1, "content_type": 16, "object_id": "160", "object_repr": "Explain a C code to sort an integer array using Selection Sort and Radix Sort.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Previous years\"]}}]"}}, {"model": "admin.logentry", "pk": 296, "fields": {"action_time": "2022-11-24T17:59:39.700Z", "user": 1, "content_type": 16, "object_id": "181", "object_repr": "Given the adjacency matrix of a graph, write a program to calculate the in- degree and the out-degree of a node N in the graph.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Previous years\"]}}]"}}, {"model": "admin.logentry", "pk": 297, "fields": {"action_time": "2022-11-24T18:00:05.321Z", "user": 1, "content_type": 16, "object_id": "181", "object_repr": "Given the adjacency matrix of a graph, write a program to calculate the in- degree and the out-degree of a node N in the graph.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Previous years\"]}}]"}}, {"model": "auth.permission", "pk": 1, "fields": {"name": "Can add log entry", "content_type": 1, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change log entry", "content_type": 1, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete log entry", "content_type": 1, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can view log entry", "content_type": 1, "codename": "view_logentry"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can add permission", "content_type": 2, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can change permission", "content_type": 2, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can delete permission", "content_type": 2, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can view permission", "content_type": 2, "codename": "view_permission"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can add group", "content_type": 3, "codename": "add_group"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can change group", "content_type": 3, "codename": "change_group"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can delete group", "content_type": 3, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can view group", "content_type": 3, "codename": "view_group"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add content type", "content_type": 4, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change content type", "content_type": 4, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete content type", "content_type": 4, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can view content type", "content_type": 4, "codename": "view_contenttype"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can add session", "content_type": 5, "codename": "add_session"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can change session", "content_type": 5, "codename": "change_session"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can delete session", "content_type": 5, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can view session", "content_type": 5, "codename": "view_session"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can add refresh token", "content_type": 6, "codename": "add_refreshtoken"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can change refresh token", "content_type": 6, "codename": "change_refreshtoken"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can delete refresh token", "content_type": 6, "codename": "delete_refreshtoken"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can view refresh token", "content_type": 6, "codename": "view_refreshtoken"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Can add user", "content_type": 7, "codename": "add_user"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can change user", "content_type": 7, "codename": "change_user"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can delete user", "content_type": 7, "codename": "delete_user"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can view user", "content_type": 7, "codename": "view_user"}}, {"model": "auth.permission", "pk": 29, "fields": {"name": "Can add blooms taxonomy level", "content_type": 8, "codename": "add_bloomstaxonomylevel"}}, {"model": "auth.permission", "pk": 30, "fields": {"name": "Can change blooms taxonomy level", "content_type": 8, "codename": "change_bloomstaxonomylevel"}}, {"model": "auth.permission", "pk": 31, "fields": {"name": "Can delete blooms taxonomy level", "content_type": 8, "codename": "delete_bloomstaxonomylevel"}}, {"model": "auth.permission", "pk": 32, "fields": {"name": "Can view blooms taxonomy level", "content_type": 8, "codename": "view_bloomstaxonomylevel"}}, {"model": "auth.permission", "pk": 33, "fields": {"name": "Can add degree", "content_type": 9, "codename": "add_degree"}}, {"model": "auth.permission", "pk": 34, "fields": {"name": "Can change degree", "content_type": 9, "codename": "change_degree"}}, {"model": "auth.permission", "pk": 35, "fields": {"name": "Can delete degree", "content_type": 9, "codename": "delete_degree"}}, {"model": "auth.permission", "pk": 36, "fields": {"name": "Can view degree", "content_type": 9, "codename": "view_degree"}}, {"model": "auth.permission", "pk": 37, "fields": {"name": "Can add lesson", "content_type": 10, "codename": "add_lesson"}}, {"model": "auth.permission", "pk": 38, "fields": {"name": "Can change lesson", "content_type": 10, "codename": "change_lesson"}}, {"model": "auth.permission", "pk": 39, "fields": {"name": "Can delete lesson", "content_type": 10, "codename": "delete_lesson"}}, {"model": "auth.permission", "pk": 40, "fields": {"name": "Can view lesson", "content_type": 10, "codename": "view_lesson"}}, {"model": "auth.permission", "pk": 41, "fields": {"name": "Can add mark range", "content_type": 11, "codename": "add_markrange"}}, {"model": "auth.permission", "pk": 42, "fields": {"name": "Can change mark range", "content_type": 11, "codename": "change_markrange"}}, {"model": "auth.permission", "pk": 43, "fields": {"name": "Can delete mark range", "content_type": 11, "codename": "delete_markrange"}}, {"model": "auth.permission", "pk": 44, "fields": {"name": "Can view mark range", "content_type": 11, "codename": "view_markrange"}}, {"model": "auth.permission", "pk": 45, "fields": {"name": "Can add previous years qp", "content_type": 12, "codename": "add_previousyearsqp"}}, {"model": "auth.permission", "pk": 46, "fields": {"name": "Can change previous years qp", "content_type": 12, "codename": "change_previousyearsqp"}}, {"model": "auth.permission", "pk": 47, "fields": {"name": "Can delete previous years qp", "content_type": 12, "codename": "delete_previousyearsqp"}}, {"model": "auth.permission", "pk": 48, "fields": {"name": "Can view previous years qp", "content_type": 12, "codename": "view_previousyearsqp"}}, {"model": "auth.permission", "pk": 49, "fields": {"name": "Can add programme", "content_type": 13, "codename": "add_programme"}}, {"model": "auth.permission", "pk": 50, "fields": {"name": "Can change programme", "content_type": 13, "codename": "change_programme"}}, {"model": "auth.permission", "pk": 51, "fields": {"name": "Can delete programme", "content_type": 13, "codename": "delete_programme"}}, {"model": "auth.permission", "pk": 52, "fields": {"name": "Can view programme", "content_type": 13, "codename": "view_programme"}}, {"model": "auth.permission", "pk": 53, "fields": {"name": "Can add regulation", "content_type": 14, "codename": "add_regulation"}}, {"model": "auth.permission", "pk": 54, "fields": {"name": "Can change regulation", "content_type": 14, "codename": "change_regulation"}}, {"model": "auth.permission", "pk": 55, "fields": {"name": "Can delete regulation", "content_type": 14, "codename": "delete_regulation"}}, {"model": "auth.permission", "pk": 56, "fields": {"name": "Can view regulation", "content_type": 14, "codename": "view_regulation"}}, {"model": "auth.permission", "pk": 57, "fields": {"name": "Can add subject", "content_type": 15, "codename": "add_subject"}}, {"model": "auth.permission", "pk": 58, "fields": {"name": "Can change subject", "content_type": 15, "codename": "change_subject"}}, {"model": "auth.permission", "pk": 59, "fields": {"name": "Can delete subject", "content_type": 15, "codename": "delete_subject"}}, {"model": "auth.permission", "pk": 60, "fields": {"name": "Can view subject", "content_type": 15, "codename": "view_subject"}}, {"model": "auth.permission", "pk": 61, "fields": {"name": "Can add question", "content_type": 16, "codename": "add_question"}}, {"model": "auth.permission", "pk": 62, "fields": {"name": "Can change question", "content_type": 16, "codename": "change_question"}}, {"model": "auth.permission", "pk": 63, "fields": {"name": "Can delete question", "content_type": 16, "codename": "delete_question"}}, {"model": "auth.permission", "pk": 64, "fields": {"name": "Can view question", "content_type": 16, "codename": "view_question"}}, {"model": "auth.permission", "pk": 65, "fields": {"name": "Can add department", "content_type": 17, "codename": "add_department"}}, {"model": "auth.permission", "pk": 66, "fields": {"name": "Can change department", "content_type": 17, "codename": "change_department"}}, {"model": "auth.permission", "pk": 67, "fields": {"name": "Can delete department", "content_type": 17, "codename": "delete_department"}}, {"model": "auth.permission", "pk": 68, "fields": {"name": "Can view department", "content_type": 17, "codename": "view_department"}}, {"model": "auth.permission", "pk": 69, "fields": {"name": "Can add course", "content_type": 18, "codename": "add_course"}}, {"model": "auth.permission", "pk": 70, "fields": {"name": "Can change course", "content_type": 18, "codename": "change_course"}}, {"model": "auth.permission", "pk": 71, "fields": {"name": "Can delete course", "content_type": 18, "codename": "delete_course"}}, {"model": "auth.permission", "pk": 72, "fields": {"name": "Can view course", "content_type": 18, "codename": "view_course"}}, {"model": "auth.permission", "pk": 73, "fields": {"name": "Can add syllabus", "content_type": 19, "codename": "add_syllabus"}}, {"model": "auth.permission", "pk": 74, "fields": {"name": "Can change syllabus", "content_type": 19, "codename": "change_syllabus"}}, {"model": "auth.permission", "pk": 75, "fields": {"name": "Can delete syllabus", "content_type": 19, "codename": "delete_syllabus"}}, {"model": "auth.permission", "pk": 76, "fields": {"name": "Can view syllabus", "content_type": 19, "codename": "view_syllabus"}}, {"model": "auth.permission", "pk": 77, "fields": {"name": "Can add faculties handling", "content_type": 20, "codename": "add_facultieshandling"}}, {"model": "auth.permission", "pk": 78, "fields": {"name": "Can change faculties handling", "content_type": 20, "codename": "change_facultieshandling"}}, {"model": "auth.permission", "pk": 79, "fields": {"name": "Can delete faculties handling", "content_type": 20, "codename": "delete_facultieshandling"}}, {"model": "auth.permission", "pk": 80, "fields": {"name": "Can view faculties handling", "content_type": 20, "codename": "view_facultieshandling"}}, {"model": "contenttypes.contenttype", "pk": 1, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 2, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 3, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 4, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 5, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "contenttypes.contenttype", "pk": 6, "fields": {"app_label": "refresh_token", "model": "refreshtoken"}}, {"model": "contenttypes.contenttype", "pk": 7, "fields": {"app_label": "users", "model": "user"}}, {"model": "contenttypes.contenttype", "pk": 8, "fields": {"app_label": "questions", "model": "bloomstaxonomylevel"}}, {"model": "contenttypes.contenttype", "pk": 9, "fields": {"app_label": "questions", "model": "degree"}}, {"model": "contenttypes.contenttype", "pk": 10, "fields": {"app_label": "questions", "model": "lesson"}}, {"model": "contenttypes.contenttype", "pk": 11, "fields": {"app_label": "questions", "model": "markrange"}}, {"model": "contenttypes.contenttype", "pk": 12, "fields": {"app_label": "questions", "model": "previousyearsqp"}}, {"model": "contenttypes.contenttype", "pk": 13, "fields": {"app_label": "questions", "model": "programme"}}, {"model": "contenttypes.contenttype", "pk": 14, "fields": {"app_label": "questions", "model": "regulation"}}, {"model": "contenttypes.contenttype", "pk": 15, "fields": {"app_label": "questions", "model": "subject"}}, {"model": "contenttypes.contenttype", "pk": 16, "fields": {"app_label": "questions", "model": "question"}}, {"model": "contenttypes.contenttype", "pk": 17, "fields": {"app_label": "questions", "model": "department"}}, {"model": "contenttypes.contenttype", "pk": 18, "fields": {"app_label": "questions", "model": "course"}}, {"model": "contenttypes.contenttype", "pk": 19, "fields": {"app_label": "questions", "model": "syllabus"}}, {"model": "contenttypes.contenttype", "pk": 20, "fields": {"app_label": "questions", "model": "facultieshandling"}}, {"model": "sessions.session", "pk": "34d0d454utbfl3qavlsp40mm8uv9mgiv", "fields": {"session_data": ".eJxVjLsOAiEUBf-F2hDeD0t7v4FcuCCrBpJltzL-u5Jsoe3MnPMiAfathn3kNSxIzoST0y-LkB65TYF3aLdOU2_bukQ6E3rYQa8d8_NytH8HFUb9rguLmhUhvEbPs8MkXLIyOmZydjJpX5yVRhgJFoSyhiU5cVGMS4Vek_cH0jg28w:1oyAM0:iX_TzxcUfUbExvmUBdaqJPn2zoMQetteiSdb_oqNbvQ", "expire_date": "2022-12-08T11:25:16.704Z"}}, {"model": "sessions.session", "pk": "7wcqtl43xdeebok4nkb8e4tzou4ldy05", "fields": {"session_data": ".eJxVjLsOAiEUBf-F2hDeD0t7v4FcuCCrBpJltzL-u5Jsoe3MnPMiAfathn3kNSxIzoST0y-LkB65TYF3aLdOU2_bukQ6E3rYQa8d8_NytH8HFUb9rguLmhUhvEbPs8MkXLIyOmZydjJpX5yVRhgJFoSyhiU5cVGMS4Vek_cH0jg28w:1oyAca:lszO7Eo_QocpwFFBuV2j7-1p8Wx-iau5dHgu0LP-VA4", "expire_date": "2022-12-08T11:42:24.547Z"}}, {"model": "sessions.session", "pk": "8gaowpc0s11kyyelqyus89eufz3urduy", "fields": {"session_data": ".eJxVjLsOAiEUBf-F2hDeD0t7v4FcuCCrBpJltzL-u5Jsoe3MnPMiAfathn3kNSxIzoST0y-LkB65TYF3aLdOU2_bukQ6E3rYQa8d8_NytH8HFUb9rguLmhUhvEbPs8MkXLIyOmZydjJpX5yVRhgJFoSyhiU5cVGMS4Vek_cH0jg28w:1oyBv6:0u8wvxgYq7aiTzrfeCmscuFIYhJxrwYUh3xrcD3ozQo", "expire_date": "2022-12-08T13:05:36.177Z"}}, {"model": "sessions.session", "pk": "dyt51mg5t0c8olxnxn58w3zcsaxyfufm", "fields": {"session_data": ".eJxVjL0KwjAYRd8ls5T8NH-Ojg46KDiGL8kXY4UWkpYi4rvbQgcd7znc8yYOpjG7qWJxj0j2hJHdL_MQntivoo4FZo-lvFzsoL8PrpvHZvO1OV7Opxv667DMw3b6K2Woeckk6iVNnFsZLUMTAzdBC2-oQjQiSJuMFoorARp4qxUNYsWppUy00Ury-QJYMDrE:1oyALr:SbdRrM7_OtHK3ERkv2QD9MqzUCjQnVXCqRHr1LQcJ7U", "expire_date": "2022-12-08T11:25:07.943Z"}}, {"model": "sessions.session", "pk": "ekp1ob6kaw4koepl9k9y4bwyszxvhjp7", "fields": {"session_data": ".eJxVjLsOAiEUBf-F2hDeD0t7v4FcuCCrBpJltzL-u5Jsoe3MnPMiAfathn3kNSxIzoST0y-LkB65TYF3aLdOU2_bukQ6E3rYQa8d8_NytH8HFUb9rguLmhUhvEbPs8MkXLIyOmZydjJpX5yVRhgJFoSyhiU5cVGMS4Vek_cH0jg28w:1oyAUD:1lNb7LeZ_HNZa50vZ9ilCORE_ot65orERyq-uTh-rxo", "expire_date": "2022-12-08T11:33:45.183Z"}}, {"model": "sessions.session", "pk": "lk8hia5no0vx0i7g6ekavovcz8jk9sis", "fields": {"session_data": ".eJxVjLsOAiEUBf-F2hDeD0t7v4FcuCCrBpJltzL-u5Jsoe3MnPMiAfathn3kNSxIzoST0y-LkB65TYF3aLdOU2_bukQ6E3rYQa8d8_NytH8HFUb9rguLmhUhvEbPs8MkXLIyOmZydjJpX5yVRhgJFoSyhiU5cVGMS4Vek_cH0jg28w:1oyB7b:OymzEnn3QpFIruGLah16wgeKQhhC2lrFnsKhNiz7UnU", "expire_date": "2022-12-08T12:14:27.997Z"}}, {"model": "sessions.session", "pk": "oe9siuurp5bnxmfzu1762rvcrqa7nhm6", "fields": {"session_data": ".eJxVjLsOAiEUBf-F2hDeD0t7v4FcuCCrBpJltzL-u5Jsoe3MnPMiAfathn3kNSxIzoST0y-LkB65TYF3aLdOU2_bukQ6E3rYQa8d8_NytH8HFUb9rguLmhUhvEbPs8MkXLIyOmZydjJpX5yVRhgJFoSyhiU5cVGMS4Vek_cH0jg28w:1oyCSD:q2VamQq2HCefjOYEQhFg1xpvEzmfS_SArSJOXWmkQ4s", "expire_date": "2022-12-08T13:39:49.664Z"}}, {"model": "sessions.session", "pk": "qihjmg5fibjlt7lp063pioi6mfvfrpni", "fields": {"session_data": ".eJxVjLsOAiEUBf-F2hDeD0t7v4FcuCCrBpJltzL-u5Jsoe3MnPMiAfathn3kNSxIzoST0y-LkB65TYF3aLdOU2_bukQ6E3rYQa8d8_NytH8HFUb9rguLmhUhvEbPs8MkXLIyOmZydjJpX5yVRhgJFoSyhiU5cVGMS4Vek_cH0jg28w:1oyDiF:ZtsvDLWVChKIMujkmltVi2bd4-nCrCGagiT8NeQhh4g", "expire_date": "2022-12-08T15:00:27.589Z"}}, {"model": "sessions.session", "pk": "sz7a28ezqbz8dwjn9inxd8p1fuopqqw8", "fields": {"session_data": ".eJxVjLsOAiEUBf-F2hDeD0t7v4FcuCCrBpJltzL-u5Jsoe3MnPMiAfathn3kNSxIzoST0y-LkB65TYF3aLdOU2_bukQ6E3rYQa8d8_NytH8HFUb9rguLmhUhvEbPs8MkXLIyOmZydjJpX5yVRhgJFoSyhiU5cVGMS4Vek_cH0jg28w:1oyDLG:38fY6HpOypdz4Asb3NylHGBbu19tNbJWufsord6YbfY", "expire_date": "2022-12-08T14:36:42.721Z"}}, {"model": "sessions.session", "pk": "v7hqgh7yqb08zntc77tfke6sw5j8tjbc", "fields": {"session_data": ".eJxVjLsOAiEUBf-F2hDeD0t7v4FcuCCrBpJltzL-u5Jsoe3MnPMiAfathn3kNSxIzoST0y-LkB65TYF3aLdOU2_bukQ6E3rYQa8d8_NytH8HFUb9rguLmhUhvEbPs8MkXLIyOmZydjJpX5yVRhgJFoSyhiU5cVGMS4Vek_cH0jg28w:1oyAPW:9f2sq7qLFJYRvTCp90qYZhu3C8EQIT13AAsumMJBtC4", "expire_date": "2022-12-08T11:28:54.009Z"}}, {"model": "sessions.session", "pk": "xz6t9rzinuolnq9z21q7qp8hg72j940b", "fields": {"session_data": ".eJxVjLsOAiEUBf-F2hDeD0t7v4FcuCCrBpJltzL-u5Jsoe3MnPMiAfathn3kNSxIzoST0y-LkB65TYF3aLdOU2_bukQ6E3rYQa8d8_NytH8HFUb9rguLmhUhvEbPs8MkXLIyOmZydjJpX5yVRhgJFoSyhiU5cVGMS4Vek_cH0jg28w:1oyAZi:xWKf4MYQ8DoyTeP6dHPpyA6nXHJzg2mrkI9RbbvE71M", "expire_date": "2022-12-08T11:39:26.403Z"}}, {"model": "refresh_token.refreshtoken", "pk": 1, "fields": {"user": 1, "token": "2781c6cd9d7a51629d4a746cbbed4d5028af02fa", "created": "2022-11-24T13:51:29.060Z", "revoked": null}}, {"model": "refresh_token.refreshtoken", "pk": 2, "fields": {"user": 1, "token": "03735fd4fe4b83a4831e359375f5598b52f1fb9a", "created": "2022-11-24T14:35:07.321Z", "revoked": null}}, {"model": "users.user", "pk": 1, "fields": {"password": "pbkdf2_sha256$390000$79vby5iGcwABaLH3crFDnT$vixpwSxGZfZ6Yl/OaIB52Jeq5swiPlbrRa1iqeASXrU=", "last_login": "2022-11-24T15:00:27.535Z", "is_superuser": true, "first_name": "", "last_name": "", "is_staff": true, "is_active": true, "date_joined": "2022-11-24T11:22:15.261Z", "email": "admin@admin.com", "groups": [], "user_permissions": []}}, {"model": "questions.bloomstaxonomylevel", "pk": 1, "fields": {"name": "K1", "description": "Remembering"}}, {"model": "questions.bloomstaxonomylevel", "pk": 2, "fields": {"name": "K2", "description": "Understanding"}}, {"model": "questions.bloomstaxonomylevel", "pk": 3, "fields": {"name": "K3", "description": "Applying"}}, {"model": "questions.bloomstaxonomylevel", "pk": 4, "fields": {"name": "K4", "description": "Analysing"}}, {"model": "questions.bloomstaxonomylevel", "pk": 5, "fields": {"name": "K5", "description": "Evaluating"}}, {"model": "questions.bloomstaxonomylevel", "pk": 6, "fields": {"name": "K6", "description": "Creating"}}, {"model": "questions.previousyearsqp", "pk": 1, "fields": {"month": "A/M", "year": 2016}}, {"model": "questions.previousyearsqp", "pk": 2, "fields": {"month": "N/D", "year": 2016}}, {"model": "questions.previousyearsqp", "pk": 3, "fields": {"month": "A/M", "year": 2017}}, {"model": "questions.previousyearsqp", "pk": 4, "fields": {"month": "N/D", "year": 2017}}, {"model": "questions.previousyearsqp", "pk": 5, "fields": {"month": "A/M", "year": 2018}}, {"model": "questions.previousyearsqp", "pk": 6, "fields": {"month": "N/D", "year": 2018}}, {"model": "questions.previousyearsqp", "pk": 7, "fields": {"month": "A/M", "year": 2019}}, {"model": "questions.previousyearsqp", "pk": 8, "fields": {"month": "N/D", "year": 2019}}, {"model": "questions.previousyearsqp", "pk": 9, "fields": {"month": "A/M", "year": 2020}}, {"model": "questions.previousyearsqp", "pk": 10, "fields": {"month": "N/D", "year": 2020}}, {"model": "questions.previousyearsqp", "pk": 11, "fields": {"month": "A/M", "year": 2021}}, {"model": "questions.previousyearsqp", "pk": 12, "fields": {"month": "N/D", "year": 2021}}, {"model": "questions.programme", "pk": 1, "fields": {"name": "UG"}}, {"model": "questions.programme", "pk": 2, "fields": {"name": "PG"}}, {"model": "questions.degree", "pk": 1, "fields": {"name": "BE", "full_form": "Bachelor of Engineering"}}, {"model": "questions.degree", "pk": 2, "fields": {"name": "BTECH", "full_form": "Bachelor of Technology"}}, {"model": "questions.regulation", "pk": 1, "fields": {"year": 2017}}, {"model": "questions.regulation", "pk": 2, "fields": {"year": 2021}}, {"model": "questions.department", "pk": 1, "fields": {"programme": 1, "degree": 1, "branch": "Computer Science Engineering", "branch_code": "CSE", "hod": 1}}, {"model": "questions.subject", "pk": 1, "fields": {"code": "CS3351", "subject_name": "Data Structures", "co": "IDK", "co_description": "", "course_outcome": "", "coe": []}}, {"model": "questions.lesson", "pk": 1, "fields": {"name": "Lists", "subject": 1}}, {"model": "questions.lesson", "pk": 2, "fields": {"name": "Stacks and Queues", "subject": 1}}, {"model": "questions.lesson", "pk": 3, "fields": {"name": "Trees", "subject": 1}}, {"model": "questions.lesson", "pk": 4, "fields": {"name": "Graphs", "subject": 1}}, {"model": "questions.lesson", "pk": 5, "fields": {"name": "Sorting, Searching and Hash Techniques", "subject": 1}}, {"model": "questions.course", "pk": 1, "fields": {"regulation": 2, "semester": 3, "department": 1, "active": true}}, {"model": "questions.syllabus", "pk": 1, "fields": {"course": 1, "unit": 1, "lesson": 1}}, {"model": "questions.syllabus", "pk": 2, "fields": {"course": 1, "unit": 2, "lesson": 2}}, {"model": "questions.syllabus", "pk": 3, "fields": {"course": 1, "unit": 3, "lesson": 4}}, {"model": "questions.syllabus", "pk": 4, "fields": {"course": 1, "unit": 4, "lesson": 5}}, {"model": "questions.syllabus", "pk": 5, "fields": {"course": 1, "unit": 5, "lesson": 3}}, {"model": "questions.markrange", "pk": 1, "fields": {"start": 2, "end": 2}}, {"model": "questions.markrange", "pk": 2, "fields": {"start": 3, "end": 4}}, {"model": "questions.markrange", "pk": 3, "fields": {"start": 5, "end": 7}}, {"model": "questions.markrange", "pk": 4, "fields": {"start": 8, "end": 9}}, {"model": "questions.markrange", "pk": 5, "fields": {"start": 10, "end": 11}}, {"model": "questions.markrange", "pk": 6, "fields": {"start": 12, "end": 13}}, {"model": "questions.markrange", "pk": 7, "fields": {"start": 14, "end": 14}}, {"model": "questions.markrange", "pk": 8, "fields": {"start": 15, "end": 16}}, {"model": "questions.question", "pk": 1, "fields": {"created_at": "2022-11-24T11:30:51.814Z", "updated_at": "2022-11-24T11:30:51.814Z", "lesson": 1, "question": "Define ADT. Give any two examples.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 2, "fields": {"created_at": "2022-11-24T11:50:15.143Z", "updated_at": "2022-11-24T11:50:15.143Z", "lesson": 1, "question": "Distinguish between linear and non linear data structures.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 3, "fields": {"created_at": "2022-11-24T11:55:14.796Z", "updated_at": "2022-11-24T11:55:14.796Z", "lesson": 1, "question": "Compare calloc() and realloc() function and mention its application in linked list.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 4, "fields": {"created_at": "2022-11-24T11:56:01.422Z", "updated_at": "2022-11-24T11:56:01.422Z", "lesson": 1, "question": "Describe the differences between singly and doubly linked lists.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 5, "fields": {"created_at": "2022-11-24T11:56:53.979Z", "updated_at": "2022-11-24T11:56:53.979Z", "lesson": 1, "question": "List out the areas in which data structures are applied extensively.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 6, "fields": {"created_at": "2022-11-24T11:57:54.276Z", "updated_at": "2022-11-24T11:57:54.276Z", "lesson": 1, "question": "Define non linear data structure.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 7, "fields": {"created_at": "2022-11-24T11:59:02.321Z", "updated_at": "2022-11-24T11:59:02.321Z", "lesson": 1, "question": "Compare singly linked list with circular linked list.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 5, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 8, "fields": {"created_at": "2022-11-24T11:59:53.534Z", "updated_at": "2022-11-24T11:59:53.534Z", "lesson": 1, "question": "What are the types of linked list?", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 9, "fields": {"created_at": "2022-11-24T12:02:40.944Z", "updated_at": "2022-11-24T12:02:40.944Z", "lesson": 1, "question": "List out the advantage of circular linked list.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 10, "fields": {"created_at": "2022-11-24T12:06:06.834Z", "updated_at": "2022-11-24T12:06:06.834Z", "lesson": 1, "question": "Binary search cannot be performed on a linked list. Examine.", "answer": "", "mark": 2, "start_mark": 3, "end_mark": 4, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 11, "fields": {"created_at": "2022-11-24T12:06:56.724Z", "updated_at": "2022-11-24T12:06:56.724Z", "lesson": 1, "question": "Discuss the advantages and disadvantages of linked lists and arrays.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 12, "fields": {"created_at": "2022-11-24T12:07:57.654Z", "updated_at": "2022-11-24T12:07:57.654Z", "lesson": 1, "question": "Give an example for linked list application.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 13, "fields": {"created_at": "2022-11-24T12:09:52.138Z", "updated_at": "2022-11-24T12:09:52.138Z", "lesson": 1, "question": "Specify the use of Header node in a linked list.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 6, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 14, "fields": {"created_at": "2022-11-24T12:10:27.878Z", "updated_at": "2022-11-24T12:10:27.878Z", "lesson": 1, "question": "Illustrate the use of linked list with an example.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 3, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 15, "fields": {"created_at": "2022-11-24T12:11:09.862Z", "updated_at": "2022-11-24T12:11:09.862Z", "lesson": 1, "question": "Show the ways in which list ADT can be implemented.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 3, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 16, "fields": {"created_at": "2022-11-24T12:11:59.757Z", "updated_at": "2022-11-24T12:11:59.757Z", "lesson": 1, "question": "Differentiate arrays and linked lists.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 17, "fields": {"created_at": "2022-11-24T12:12:53.855Z", "updated_at": "2022-11-24T12:12:53.855Z", "lesson": 1, "question": "Analyze and write a find routine in array implementation.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 18, "fields": {"created_at": "2022-11-24T12:14:11.072Z", "updated_at": "2022-11-24T12:14:11.072Z", "lesson": 1, "question": "Analyze and write the array representation of a polynomial: p(x) = 4x3+6x2+7x+9", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 19, "fields": {"created_at": "2022-11-24T12:16:43.450Z", "updated_at": "2022-11-24T12:16:43.450Z", "lesson": 1, "question": "Should arrays or linked lists be used for the following types of applications? Support your justification.\r\n1.\tMany search operations in sorted list.\r\n2.\tMany search operations in Unsorted list.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 5, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 20, "fields": {"created_at": "2022-11-24T12:17:25.165Z", "updated_at": "2022-11-24T12:17:25.165Z", "lesson": 1, "question": "Develop an algorithm for insertion operation in a singly linked list.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 6, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 21, "fields": {"created_at": "2022-11-24T12:20:01.182Z", "updated_at": "2022-11-24T12:20:01.182Z", "lesson": 1, "question": "Describe the Applications of lists.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 22, "fields": {"created_at": "2022-11-24T12:20:58.075Z", "updated_at": "2022-11-24T12:20:58.075Z", "lesson": 1, "question": "Describe the \tPolynomial manipulation.", "answer": "", "mark": 4, "start_mark": 8, "end_mark": 9, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 23, "fields": {"created_at": "2022-11-24T12:22:13.382Z", "updated_at": "2022-11-24T12:22:13.382Z", "lesson": 1, "question": "What is a linked list?", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 24, "fields": {"created_at": "2022-11-24T12:22:42.626Z", "updated_at": "2022-11-24T12:22:42.626Z", "lesson": 1, "question": "Describe the suitable routine segments for any four operations.", "answer": "", "mark": 5, "start_mark": 10, "end_mark": 11, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 25, "fields": {"created_at": "2022-11-24T12:25:38.092Z", "updated_at": "2022-11-24T12:25:38.092Z", "lesson": 1, "question": "List an algorithm to perform the following operations in a doubly linked list. \r\n  i.Insert a node at the end of the list.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 26, "fields": {"created_at": "2022-11-24T12:26:25.596Z", "updated_at": "2022-11-24T12:26:25.596Z", "lesson": 1, "question": "List an algorithm to perform the following operations in a doubly linked list.\r\n      i.Delete the last node in the list.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 27, "fields": {"created_at": "2022-11-24T12:27:14.801Z", "updated_at": "2022-11-24T12:27:14.801Z", "lesson": 1, "question": "Discuss the insertion and deletion procedures for cursor based linked lists.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 28, "fields": {"created_at": "2022-11-24T12:27:55.139Z", "updated_at": "2022-11-24T12:27:55.139Z", "lesson": 1, "question": "Give an algorithm for the deletion and reverse operations on doubly linked list.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 29, "fields": {"created_at": "2022-11-24T12:28:39.286Z", "updated_at": "2022-11-24T12:28:39.286Z", "lesson": 1, "question": "Give the algorithm to perform insertion on a doubly linked list.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 30, "fields": {"created_at": "2022-11-24T12:29:08.047Z", "updated_at": "2022-11-24T12:29:08.047Z", "lesson": 1, "question": "Give the algorithm to perform deletion on a doubly linked list.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 31, "fields": {"created_at": "2022-11-24T12:30:32.630Z", "updated_at": "2022-11-24T12:30:32.630Z", "lesson": 1, "question": "Write an algorithm to demonstrate a polynomial using a linked list for Addition and Subtraction.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 32, "fields": {"created_at": "2022-11-24T12:31:25.716Z", "updated_at": "2022-11-24T12:31:25.716Z", "lesson": 1, "question": "Write an algorithm to demonstrate a polynomial using a linked list for Multiplication operations.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 33, "fields": {"created_at": "2022-11-24T12:32:50.679Z", "updated_at": "2022-11-24T12:32:50.679Z", "lesson": 1, "question": "Analyze and write algorithm for Circular Linked list for the following operations using structure pointer.\r\ni.\tCreate & Insert .", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 34, "fields": {"created_at": "2022-11-24T12:33:41.046Z", "updated_at": "2022-11-24T12:33:41.046Z", "lesson": 1, "question": "Analyze and write algorithm for Circular Linked list for the following operations using structure pointer.\r\n i. Delete & Display.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 35, "fields": {"created_at": "2022-11-24T12:35:56.932Z", "updated_at": "2022-11-24T12:35:56.933Z", "lesson": 1, "question": "Explain the application of linked list in detail.\r\ni. Radix sort.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 36, "fields": {"created_at": "2022-11-24T12:36:38.397Z", "updated_at": "2022-11-24T12:36:38.397Z", "lesson": 1, "question": "Explain the application of linked list in detail.\r\ni.  Multi list.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 37, "fields": {"created_at": "2022-11-24T12:37:47.642Z", "updated_at": "2022-11-24T12:52:06.893Z", "lesson": 1, "question": "Consider an array A[1: n] Given a position, write an algorithm to insert an element in the Array. If the position is empty, the element is inserted easily. If the position is already occupied the element should be inserted with the minimum number of shifts. (Note: The elements can shift to the left or to the right to make the minimum number of moves).", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 5, "difficulty": "H", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 38, "fields": {"created_at": "2022-11-24T12:38:53.089Z", "updated_at": "2022-11-24T12:38:53.089Z", "lesson": 1, "question": "Develop a program to add the values of the nodes of a linked list and then calculate the mean.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 6, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 39, "fields": {"created_at": "2022-11-24T12:39:20.275Z", "updated_at": "2022-11-24T12:39:20.275Z", "lesson": 1, "question": "Describe the various operations of the list ADT with examples.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 40, "fields": {"created_at": "2022-11-24T12:40:17.339Z", "updated_at": "2022-11-24T12:40:17.339Z", "lesson": 1, "question": "Illustrate how polynomial manipulations are performed using lists? Explain any two operations with example.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 41, "fields": {"created_at": "2022-11-24T12:41:24.310Z", "updated_at": "2022-11-24T12:41:24.310Z", "lesson": 1, "question": "Explain the steps involved in the following insertion operations in a singly linked list.\r\ni. Insert the node in the start and End.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 42, "fields": {"created_at": "2022-11-24T12:42:05.845Z", "updated_at": "2022-11-24T12:42:05.845Z", "lesson": 1, "question": "Explain the steps involved in the following insertion operations in a singly linked list.\r\n ii. Insert the node in the middle of the List.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 43, "fields": {"created_at": "2022-11-24T12:42:46.165Z", "updated_at": "2022-11-24T12:42:46.165Z", "lesson": 1, "question": "Dicuss an algorithm for linked list implementation of list.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 44, "fields": {"created_at": "2022-11-24T12:43:25.036Z", "updated_at": "2022-11-24T12:43:25.036Z", "lesson": 1, "question": "Create an algorithm to add two polynomials using linked list.", "answer": "", "mark": 8, "start_mark": 15, "end_mark": 16, "btl": 6, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 45, "fields": {"created_at": "2022-11-24T12:44:04.058Z", "updated_at": "2022-11-24T12:44:04.058Z", "lesson": 1, "question": "Explain an algorithm to split a linked list into two sub lists containing odd and even ordered elements in them respectively.", "answer": "", "mark": 8, "start_mark": 15, "end_mark": 16, "btl": 5, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 46, "fields": {"created_at": "2022-11-24T12:45:11.250Z", "updated_at": "2022-11-24T12:45:11.250Z", "lesson": 1, "question": "Explain an algorithm to merge two sorted linked lists into a single sorted list.", "answer": "", "mark": 8, "start_mark": 15, "end_mark": 16, "btl": 5, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 47, "fields": {"created_at": "2022-11-24T12:46:17.039Z", "updated_at": "2022-11-24T12:46:17.039Z", "lesson": 1, "question": "Design algorithm for various operations performed on circular linked list.\r\nExtend the algorithm defined in the previous question for the doubly linked circular list.", "answer": "", "mark": 8, "start_mark": 15, "end_mark": 16, "btl": 6, "difficulty": "H", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 48, "fields": {"created_at": "2022-11-24T12:48:05.223Z", "updated_at": "2022-11-24T12:48:05.223Z", "lesson": 2, "question": "Point out the advantage of representing stack using a linked list than array.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 49, "fields": {"created_at": "2022-11-24T12:48:38.439Z", "updated_at": "2022-11-24T12:48:38.439Z", "lesson": 2, "question": "Point out the rules followed during the infix to postfix conversions.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 50, "fields": {"created_at": "2022-11-24T12:49:08.088Z", "updated_at": "2022-11-24T12:49:08.088Z", "lesson": 2, "question": "Compare the working of stack and queue data structure.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 5, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 51, "fields": {"created_at": "2022-11-24T12:49:36.035Z", "updated_at": "2022-11-24T12:49:36.035Z", "lesson": 2, "question": "Develop an algorithm for inserting a new element into the stack.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 6, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 52, "fields": {"created_at": "2022-11-24T12:50:05.430Z", "updated_at": "2022-11-24T12:50:05.430Z", "lesson": 2, "question": "Define stack and queue.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 53, "fields": {"created_at": "2022-11-24T12:50:52.444Z", "updated_at": "2022-11-24T12:50:52.444Z", "lesson": 2, "question": "List any four applications of stack.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 54, "fields": {"created_at": "2022-11-24T12:52:01.859Z", "updated_at": "2022-11-24T12:52:01.859Z", "lesson": 2, "question": "Given the prefix for an expression. Write its postfix:", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 55, "fields": {"created_at": "2022-11-24T12:53:12.859Z", "updated_at": "2022-11-24T12:53:12.859Z", "lesson": 2, "question": "Describe how the following \"infix\" expression is evaluated with the help of", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 56, "fields": {"created_at": "2022-11-24T12:54:05.766Z", "updated_at": "2022-11-24T12:54:05.766Z", "lesson": 2, "question": "Give the postfix and prefix forms of the expression:", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 57, "fields": {"created_at": "2022-11-24T12:54:38.697Z", "updated_at": "2022-11-24T12:54:38.697Z", "lesson": 2, "question": "Define double ended queue.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 58, "fields": {"created_at": "2022-11-24T12:55:26.101Z", "updated_at": "2022-11-24T12:55:26.101Z", "lesson": 2, "question": "List the applications of a queue.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 59, "fields": {"created_at": "2022-11-24T12:56:19.131Z", "updated_at": "2022-11-24T12:56:19.131Z", "lesson": 2, "question": "What are the applications of priority queue?", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 60, "fields": {"created_at": "2022-11-24T12:56:44.433Z", "updated_at": "2022-11-24T12:56:44.433Z", "lesson": 2, "question": "What is circular queue?", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 61, "fields": {"created_at": "2022-11-24T12:57:11.431Z", "updated_at": "2022-11-24T12:57:11.431Z", "lesson": 2, "question": "Circular queue is better than standard linear queue, Why?", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 62, "fields": {"created_at": "2022-11-24T12:57:35.641Z", "updated_at": "2022-11-24T12:57:35.641Z", "lesson": 2, "question": "Classify the different types of queues.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 3, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 63, "fields": {"created_at": "2022-11-24T12:58:21.196Z", "updated_at": "2022-11-24T12:58:21.196Z", "lesson": 2, "question": "Illustrate the difference between a queues and linked lists with an example.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 3, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 64, "fields": {"created_at": "2022-11-24T12:58:49.083Z", "updated_at": "2022-11-24T12:58:49.083Z", "lesson": 2, "question": "Complete a routine to display the contents of queue.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 65, "fields": {"created_at": "2022-11-24T12:59:02.200Z", "updated_at": "2022-11-24T12:59:02.200Z", "lesson": 5, "question": "What is hashing?", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 66, "fields": {"created_at": "2022-11-24T12:59:16.989Z", "updated_at": "2022-11-24T12:59:16.989Z", "lesson": 2, "question": "Analyze and write a routine to check whether the queue is full or empty.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 67, "fields": {"created_at": "2022-11-24T13:00:12.575Z", "updated_at": "2022-11-24T13:00:12.575Z", "lesson": 2, "question": "For railway reservation the queue data structure is preferred –Justify.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 5, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 68, "fields": {"created_at": "2022-11-24T13:00:51.380Z", "updated_at": "2022-11-24T13:00:51.380Z", "lesson": 2, "question": "Develop an algorithm for deleting an element in a double ended queue.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 6, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 69, "fields": {"created_at": "2022-11-24T13:00:59.939Z", "updated_at": "2022-11-24T13:00:59.939Z", "lesson": 5, "question": "Describe how the divide and conquer technique is implemented in binary search.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 70, "fields": {"created_at": "2022-11-24T13:01:19.379Z", "updated_at": "2022-11-24T13:01:19.379Z", "lesson": 2, "question": "Describe with an example how to evaluate arithmetic expressions using stacks.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 71, "fields": {"created_at": "2022-11-24T13:01:35.865Z", "updated_at": "2022-11-24T13:01:35.865Z", "lesson": 5, "question": "Describe the algorithm to sort the following array: 77, 33, 44, 11, 88, 22, 66,\r\n55 (Insertion sort)", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "H", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 72, "fields": {"created_at": "2022-11-24T13:01:55.026Z", "updated_at": "2022-11-24T13:02:12.644Z", "lesson": 5, "question": "Describe the algorithm to sort the following array: 77, 33, 44, 11, 88, 22, 66,\r\n55 (Shell Sort)", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 73, "fields": {"created_at": "2022-11-24T13:01:58.272Z", "updated_at": "2022-11-24T13:01:58.272Z", "lesson": 2, "question": "Explain array based implementation of stacks.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 74, "fields": {"created_at": "2022-11-24T13:02:26.172Z", "updated_at": "2022-11-24T13:02:26.172Z", "lesson": 2, "question": "Explain linked list implementation of stacks.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 75, "fields": {"created_at": "2022-11-24T13:03:02.687Z", "updated_at": "2022-11-24T13:03:02.687Z", "lesson": 2, "question": "Describe about stack ADT in detail.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 76, "fields": {"created_at": "2022-11-24T13:03:41.081Z", "updated_at": "2022-11-24T13:03:41.081Z", "lesson": 2, "question": "Explain any one application of stack.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 77, "fields": {"created_at": "2022-11-24T13:04:51.290Z", "updated_at": "2022-11-24T13:04:51.290Z", "lesson": 2, "question": "Explain the following expressions with an example. \r\n  i.Prefix and infix", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 3, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 78, "fields": {"created_at": "2022-11-24T13:05:34.722Z", "updated_at": "2022-11-24T13:05:34.722Z", "lesson": 2, "question": "Explain the following expressions with an example.\r\n i.Postfix.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 3, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 79, "fields": {"created_at": "2022-11-24T13:06:15.932Z", "updated_at": "2022-11-24T13:06:15.932Z", "lesson": 2, "question": "Write an algorithm to convert an infix expression to a postfix expression. Trace the algorithm to convert the infix expression ‘(a+b)*c/d+e/f” to a postfix expression.", "answer": "", "mark": 4, "start_mark": 8, "end_mark": 9, "btl": 5, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 80, "fields": {"created_at": "2022-11-24T13:06:59.437Z", "updated_at": "2022-11-24T13:06:59.437Z", "lesson": 2, "question": "Justify the need for Infix and Postfix expression.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 5, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 81, "fields": {"created_at": "2022-11-24T13:07:55.136Z", "updated_at": "2022-11-24T13:07:55.136Z", "lesson": 2, "question": "Give an algorithm for push and pop operations on stack using a linked list.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 82, "fields": {"created_at": "2022-11-24T13:09:20.288Z", "updated_at": "2022-11-24T13:09:20.288Z", "lesson": 5, "question": "Define extendible hashing.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 83, "fields": {"created_at": "2022-11-24T13:10:02.389Z", "updated_at": "2022-11-24T13:10:02.389Z", "lesson": 5, "question": "Give the fastest searching algorithm.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 84, "fields": {"created_at": "2022-11-24T13:10:39.270Z", "updated_at": "2022-11-24T13:10:39.270Z", "lesson": 5, "question": "What is meant by internal and external sorting? Give any two examples for each type.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 85, "fields": {"created_at": "2022-11-24T13:11:17.051Z", "updated_at": "2022-11-24T13:11:17.051Z", "lesson": 5, "question": "Describe the complexity of bubble sort.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 86, "fields": {"created_at": "2022-11-24T13:11:52.009Z", "updated_at": "2022-11-24T13:11:52.009Z", "lesson": 5, "question": "Name the applications of linear and binary search techniques.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 87, "fields": {"created_at": "2022-11-24T13:12:19.066Z", "updated_at": "2022-11-24T13:12:19.066Z", "lesson": 5, "question": "Give the time complexities of bubble sort and quick sort.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 88, "fields": {"created_at": "2022-11-24T13:12:45.071Z", "updated_at": "2022-11-24T13:12:45.071Z", "lesson": 5, "question": "Predict the fastest sorting algorithm, justify.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 89, "fields": {"created_at": "2022-11-24T13:13:45.484Z", "updated_at": "2022-11-24T13:13:45.484Z", "lesson": 5, "question": "Compare internal and external sorting.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "H", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 90, "fields": {"created_at": "2022-11-24T13:14:12.863Z", "updated_at": "2022-11-24T13:14:12.863Z", "lesson": 5, "question": "Distinguish between linear and binary search technique.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 91, "fields": {"created_at": "2022-11-24T13:14:57.745Z", "updated_at": "2022-11-24T13:14:57.745Z", "lesson": 5, "question": "Classify the different sorting methods.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 92, "fields": {"created_at": "2022-11-24T13:15:26.199Z", "updated_at": "2022-11-24T13:15:26.199Z", "lesson": 5, "question": "Develop an algorithm for a quick sort.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 6, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 93, "fields": {"created_at": "2022-11-24T13:15:56.992Z", "updated_at": "2022-11-24T13:15:56.992Z", "lesson": 5, "question": "Which hashing technique is best and illustrate with an example?", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 94, "fields": {"created_at": "2022-11-24T13:16:22.541Z", "updated_at": "2022-11-24T13:16:22.541Z", "lesson": 5, "question": "Summarize the open addressing hashing method with an example.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 5, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 95, "fields": {"created_at": "2022-11-24T13:16:43.561Z", "updated_at": "2022-11-24T13:16:43.561Z", "lesson": 5, "question": "Point out the advantages of using quick sort.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 96, "fields": {"created_at": "2022-11-24T13:17:17.702Z", "updated_at": "2022-11-24T13:17:17.702Z", "lesson": 5, "question": "Compare the working of linear and binary search techniques.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 97, "fields": {"created_at": "2022-11-24T13:17:48.773Z", "updated_at": "2022-11-24T13:17:48.773Z", "lesson": 5, "question": "Select the best sorting method out of the following - insertion sort, quick sort and merge sort and give justification.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 5, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 98, "fields": {"created_at": "2022-11-24T13:17:49.206Z", "updated_at": "2022-11-24T13:17:49.206Z", "lesson": 2, "question": "Describe the process of postfix expression evaluation with an example.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 99, "fields": {"created_at": "2022-11-24T13:18:07.541Z", "updated_at": "2022-11-24T13:18:07.541Z", "lesson": 5, "question": "Illustrate the time complexity of insertion sort with an example.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 100, "fields": {"created_at": "2022-11-24T13:18:27.634Z", "updated_at": "2022-11-24T13:18:27.634Z", "lesson": 2, "question": "Describe the process of conversion from infix expression to postfix expression using stack.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 101, "fields": {"created_at": "2022-11-24T13:18:30.969Z", "updated_at": "2022-11-24T13:18:30.969Z", "lesson": 5, "question": "Identify the advantage of shell sort over insertion sort.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 102, "fields": {"created_at": "2022-11-24T13:18:55.365Z", "updated_at": "2022-11-24T13:18:55.365Z", "lesson": 4, "question": "What is a graph and its types?", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 103, "fields": {"created_at": "2022-11-24T13:18:56.106Z", "updated_at": "2022-11-24T13:18:56.106Z", "lesson": 5, "question": "Develop a simple algorithm for a linear search.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 6, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 104, "fields": {"created_at": "2022-11-24T13:19:14.735Z", "updated_at": "2022-11-24T13:19:14.735Z", "lesson": 2, "question": "Write an algorithm that checks if expression is correctly parenthesized using stack and illustrate with an example.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 105, "fields": {"created_at": "2022-11-24T13:20:03.687Z", "updated_at": "2022-11-24T13:20:03.687Z", "lesson": 2, "question": "Write the function to examine whether the stack is full() or empty().", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 106, "fields": {"created_at": "2022-11-24T13:20:59.065Z", "updated_at": "2022-11-24T13:20:59.065Z", "lesson": 4, "question": "Create a complete undirected graph having five nodes", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 6, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 107, "fields": {"created_at": "2022-11-24T13:21:12.004Z", "updated_at": "2022-11-24T13:21:12.004Z", "lesson": 2, "question": "Describe about queue ADT in detail.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 108, "fields": {"created_at": "2022-11-24T13:21:21.732Z", "updated_at": "2022-11-24T13:21:21.732Z", "lesson": 4, "question": "When do you say a graph is bi-connected?", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 109, "fields": {"created_at": "2022-11-24T13:21:30.929Z", "updated_at": "2022-11-24T13:21:30.929Z", "lesson": 5, "question": "List the different types of hashing techniques?", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 110, "fields": {"created_at": "2022-11-24T13:21:36.045Z", "updated_at": "2022-11-24T13:21:36.045Z", "lesson": 2, "question": "Explain any one application of queue with suitable example.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 111, "fields": {"created_at": "2022-11-24T13:21:40.174Z", "updated_at": "2022-11-24T13:21:40.174Z", "lesson": 4, "question": "Give the purpose of Dijikstra’s algorithm.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 112, "fields": {"created_at": "2022-11-24T13:21:59.300Z", "updated_at": "2022-11-24T13:21:59.300Z", "lesson": 5, "question": "Explain them in detail with an Example.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 113, "fields": {"created_at": "2022-11-24T13:22:00.529Z", "updated_at": "2022-11-24T13:22:00.530Z", "lesson": 4, "question": "Differentiate cyclic and acyclic graph", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 114, "fields": {"created_at": "2022-11-24T13:22:00.837Z", "updated_at": "2022-11-24T13:22:00.837Z", "lesson": 2, "question": "Briefly describe the operations of queue with examples.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 115, "fields": {"created_at": "2022-11-24T13:22:17.359Z", "updated_at": "2022-11-24T13:22:17.359Z", "lesson": 4, "question": "Classify strongly connected and weakly connected graph.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 116, "fields": {"created_at": "2022-11-24T13:22:30.525Z", "updated_at": "2022-11-24T13:22:30.525Z", "lesson": 2, "question": "Analyze and write an algorithm to implement queue functions using arrays.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 117, "fields": {"created_at": "2022-11-24T13:22:33.120Z", "updated_at": "2022-11-24T13:22:33.120Z", "lesson": 4, "question": "How to find all articulation points in a given graph?", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 3, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 118, "fields": {"created_at": "2022-11-24T13:22:33.474Z", "updated_at": "2022-11-24T13:22:33.474Z", "lesson": 5, "question": "Interpret the result of inserting the keys 2, 3, 5, 7, 11, 13, 15, 6, 4 into an initially empty extendible hashing data structure with M = 3.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 119, "fields": {"created_at": "2022-11-24T13:22:45.479Z", "updated_at": "2022-11-24T13:22:45.479Z", "lesson": 4, "question": "Define the length of the graph.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 120, "fields": {"created_at": "2022-11-24T13:22:55.509Z", "updated_at": "2022-11-24T13:22:55.510Z", "lesson": 2, "question": "Develop an algorithm to perform the four operations in a double ended queue\r\nthat is implemented as an array.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 6, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 121, "fields": {"created_at": "2022-11-24T13:22:58.825Z", "updated_at": "2022-11-24T13:22:58.825Z", "lesson": 4, "question": "Define minimum spanning tree. Give an example", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 122, "fields": {"created_at": "2022-11-24T13:23:03.301Z", "updated_at": "2022-11-24T13:23:03.301Z", "lesson": 5, "question": "Discuss the running time of Divide-and-Conquer Merge sort algorithm.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 123, "fields": {"created_at": "2022-11-24T13:23:22.004Z", "updated_at": "2022-11-24T13:23:22.004Z", "lesson": 4, "question": "State the principle of Topological sorting.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 124, "fields": {"created_at": "2022-11-24T13:23:24.204Z", "updated_at": "2022-11-24T13:23:24.204Z", "lesson": 2, "question": "Discuss circular queue and its implementation.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 125, "fields": {"created_at": "2022-11-24T13:23:35.063Z", "updated_at": "2022-11-24T13:23:35.063Z", "lesson": 4, "question": "Explain procedure for Depth first search algorithm.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "H", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 126, "fields": {"created_at": "2022-11-24T13:23:36.763Z", "updated_at": "2022-11-24T13:23:36.763Z", "lesson": 5, "question": "Sort the sequence 3, 1, 4, 1, 5, 9, 2, 6, 5 using Insertion sort.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 127, "fields": {"created_at": "2022-11-24T13:23:50.801Z", "updated_at": "2022-11-24T13:23:50.801Z", "lesson": 4, "question": "Analyze Bi-connectivity.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 128, "fields": {"created_at": "2022-11-24T13:23:54.257Z", "updated_at": "2022-11-24T13:23:54.257Z", "lesson": 2, "question": "Illustrate the enqueue and dequeue operations on double ended queues.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 129, "fields": {"created_at": "2022-11-24T13:24:01.515Z", "updated_at": "2022-11-24T13:24:01.515Z", "lesson": 5, "question": "Describe the routine for insertion sort.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 130, "fields": {"created_at": "2022-11-24T13:24:30.902Z", "updated_at": "2022-11-24T13:24:30.902Z", "lesson": 4, "question": "Prove that the number of edges in a complete graph of n vertices in n(n-1)/2", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 5, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 131, "fields": {"created_at": "2022-11-24T13:24:37.911Z", "updated_at": "2022-11-24T13:24:37.911Z", "lesson": 2, "question": "Develop and Show the simulation using stack for the following expression : 12 + 3 * 14 – (5 * 16) + 7 .", "answer": "", "mark": 8, "start_mark": 15, "end_mark": 16, "btl": 6, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 132, "fields": {"created_at": "2022-11-24T13:24:49.998Z", "updated_at": "2022-11-24T13:24:49.998Z", "lesson": 5, "question": "Write an algorithm to sort a set of ‘N’ numbers using quick sort. Demonstrate the algorithm for the following set of numbers: 88,11,22,44,66,99,32,67,54,10.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 133, "fields": {"created_at": "2022-11-24T13:25:21.089Z", "updated_at": "2022-11-24T13:25:21.089Z", "lesson": 5, "question": "Explain the various collision resolution techniques in detail with an example", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 134, "fields": {"created_at": "2022-11-24T13:25:22.162Z", "updated_at": "2022-11-24T13:25:22.162Z", "lesson": 2, "question": "Explain an algorithm to implement the circular queue using arrays.  List the applications of Queues.", "answer": "", "mark": 8, "start_mark": 15, "end_mark": 16, "btl": 5, "difficulty": "H", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 135, "fields": {"created_at": "2022-11-24T13:26:04.951Z", "updated_at": "2022-11-24T13:26:04.951Z", "lesson": 2, "question": "Assess the difference between double ended queue and circular queue.\r\nShow the simulation using stack for the following expression to convert infix to postpix : p * q = (r-s / t).", "answer": "", "mark": 8, "start_mark": 15, "end_mark": 16, "btl": 5, "difficulty": "H", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 136, "fields": {"created_at": "2022-11-24T13:26:08.818Z", "updated_at": "2022-11-24T13:26:30.825Z", "lesson": 4, "question": "In a complete graph with n vertices, show that the number of spanning trees is at least 2^n-1 - 1", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 5, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 137, "fields": {"created_at": "2022-11-24T13:26:10.391Z", "updated_at": "2022-11-24T13:26:10.391Z", "lesson": 5, "question": "Compare the below different Sorting methods and discuss about each method in a very detailed Manner.\r\ni.Bucket Sort.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 138, "fields": {"created_at": "2022-11-24T13:26:49.793Z", "updated_at": "2022-11-24T13:26:49.793Z", "lesson": 2, "question": "Develop an algorithm to explain Priority Queue, deQueue and the applications of queues.", "answer": "", "mark": 8, "start_mark": 15, "end_mark": 16, "btl": 6, "difficulty": "H", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 139, "fields": {"created_at": "2022-11-24T13:26:56.335Z", "updated_at": "2022-11-24T13:26:56.335Z", "lesson": 5, "question": "Compare the below different Sorting methods and discuss about each method in a very detailed Manner.\r\nii.Selection Sort", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 140, "fields": {"created_at": "2022-11-24T13:27:14.470Z", "updated_at": "2022-11-24T13:27:14.470Z", "lesson": 4, "question": "What are Euler circuits?", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 141, "fields": {"created_at": "2022-11-24T13:27:31.173Z", "updated_at": "2022-11-24T13:27:31.173Z", "lesson": 5, "question": "Sort the given integers and Explain the intermediate results using shell sort: 35,12,14,9,15,45,32,95,40,5.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 5, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 142, "fields": {"created_at": "2022-11-24T13:28:01.879Z", "updated_at": "2022-11-24T13:28:01.879Z", "lesson": 5, "question": "Write and Explain a C code to sort an integer array.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 5, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 143, "fields": {"created_at": "2022-11-24T13:28:17.996Z", "updated_at": "2022-11-24T13:28:17.996Z", "lesson": 4, "question": "Give two applications of graphs.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 144, "fields": {"created_at": "2022-11-24T13:28:28.103Z", "updated_at": "2022-11-24T13:28:28.103Z", "lesson": 5, "question": "Create a algorithm to perform a binary Search.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 6, "difficulty": "H", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 145, "fields": {"created_at": "2022-11-24T13:28:31.928Z", "updated_at": "2022-11-24T13:28:31.928Z", "lesson": 4, "question": "What is residual graph?", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 146, "fields": {"created_at": "2022-11-24T13:28:52.362Z", "updated_at": "2022-11-24T13:28:52.362Z", "lesson": 5, "question": "Develop an algorithm for Merge sort with an example.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 6, "difficulty": "H", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 147, "fields": {"created_at": "2022-11-24T13:29:37.493Z", "updated_at": "2022-11-24T13:29:37.493Z", "lesson": 5, "question": "Write short notes on Bubble Sort.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 148, "fields": {"created_at": "2022-11-24T13:30:02.531Z", "updated_at": "2022-11-24T13:30:02.531Z", "lesson": 5, "question": "Illustrate an algorithm to sort the elements using bubble sort.", "answer": "", "mark": 4, "start_mark": 8, "end_mark": 9, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 149, "fields": {"created_at": "2022-11-24T13:30:09.630Z", "updated_at": "2022-11-24T13:30:09.630Z", "lesson": 4, "question": "Describe in detail about the following representations of a graph.\r\ni. Adjacency Matrix", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 150, "fields": {"created_at": "2022-11-24T13:30:38.086Z", "updated_at": "2022-11-24T13:30:38.086Z", "lesson": 5, "question": "Describe the following collision resolution techniques in detail with an example.\r\ni.Separate chaining.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 151, "fields": {"created_at": "2022-11-24T13:30:43.804Z", "updated_at": "2022-11-24T13:30:43.804Z", "lesson": 4, "question": "Describe in detail about the following representations of a graph.\r\ni. Adjacency List", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 152, "fields": {"created_at": "2022-11-24T13:31:09.702Z", "updated_at": "2022-11-24T13:31:09.702Z", "lesson": 5, "question": "Describe the following collision resolution techniques in detail with an example.\r\nii.Rehashing.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 153, "fields": {"created_at": "2022-11-24T13:31:13.039Z", "updated_at": "2022-11-24T13:31:13.039Z", "lesson": 4, "question": "Explain the topological sorting of a graph G with example.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 154, "fields": {"created_at": "2022-11-24T13:31:33.110Z", "updated_at": "2022-11-24T13:31:33.110Z", "lesson": 4, "question": "Quote the step wise procedure for topological sort", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 155, "fields": {"created_at": "2022-11-24T13:31:47.515Z", "updated_at": "2022-11-24T13:31:47.515Z", "lesson": 4, "question": "Differentiate depth-first search and breadth-first search traversal of a graph with suitable examples.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 156, "fields": {"created_at": "2022-11-24T13:31:50.256Z", "updated_at": "2022-11-24T13:31:50.256Z", "lesson": 5, "question": "Explain different hashing technique.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 157, "fields": {"created_at": "2022-11-24T13:32:12.835Z", "updated_at": "2022-11-24T13:32:12.835Z", "lesson": 5, "question": "Explain the rehashing technique with suitable example.", "answer": "", "mark": 4, "start_mark": 8, "end_mark": 9, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 158, "fields": {"created_at": "2022-11-24T13:32:34.750Z", "updated_at": "2022-11-24T13:32:34.750Z", "lesson": 5, "question": "Describe the open addressing and chaining methods of collusion resolution techniques in hashing.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 159, "fields": {"created_at": "2022-11-24T13:33:04.908Z", "updated_at": "2022-11-24T13:33:04.908Z", "lesson": 5, "question": "Develop an algorithm to search a number in a given set of numbers using binary search. Develop and algorithm to explain Extendible Hashing.", "answer": "", "mark": 8, "start_mark": 15, "end_mark": 16, "btl": 6, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 160, "fields": {"created_at": "2022-11-24T13:33:33.780Z", "updated_at": "2022-11-24T17:59:24.331Z", "lesson": 5, "question": "Explain a C code to sort an integer array using Selection Sort and Radix Sort.", "answer": "", "mark": 8, "start_mark": 15, "end_mark": 16, "btl": 5, "difficulty": "M", "created_by": 1, "previous_years": [6, 1, 4]}}, {"model": "questions.question", "pk": 161, "fields": {"created_at": "2022-11-24T13:33:44.483Z", "updated_at": "2022-11-24T13:33:44.483Z", "lesson": 4, "question": "Explain with algorithm, How DFS be performed on a undirected graph.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 162, "fields": {"created_at": "2022-11-24T13:34:00.380Z", "updated_at": "2022-11-24T13:34:00.381Z", "lesson": 4, "question": "Show the algorithm for finding connected components of an undirected\r\ngraph using DFS, and derive the time complexity of the algorithm.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 4, "difficulty": "H", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 163, "fields": {"created_at": "2022-11-24T13:34:07.983Z", "updated_at": "2022-11-24T13:34:07.983Z", "lesson": 5, "question": "Explain an algorithm for Shell Sort and Merge Sort and explain with example.", "answer": "", "mark": 8, "start_mark": 15, "end_mark": 16, "btl": 5, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 164, "fields": {"created_at": "2022-11-24T13:34:18.404Z", "updated_at": "2022-11-24T13:34:18.404Z", "lesson": 4, "question": "Discuss an algorithm for Breadth first Search on a graph.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 165, "fields": {"created_at": "2022-11-24T13:34:37.019Z", "updated_at": "2022-11-24T13:34:37.019Z", "lesson": 4, "question": "Give an example based on the algorithm.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 166, "fields": {"created_at": "2022-11-24T13:35:02.759Z", "updated_at": "2022-11-24T13:35:02.759Z", "lesson": 5, "question": "Prepare a quick sort algorithm and explain with suitable example Give its worst case, average case and best case time complexities.", "answer": "", "mark": 8, "start_mark": 15, "end_mark": 16, "btl": 6, "difficulty": "H", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 167, "fields": {"created_at": "2022-11-24T13:36:19.566Z", "updated_at": "2022-11-24T13:36:24.051Z", "lesson": 3, "question": "If the depth of the binary tree is k, the maximum number of nodes in the\r\nbinary tree is 2k-1.Justify", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 5, "difficulty": "H", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 168, "fields": {"created_at": "2022-11-24T13:37:10.895Z", "updated_at": "2022-11-24T13:37:10.895Z", "lesson": 3, "question": "Define a fully binary tree.Give an example.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 169, "fields": {"created_at": "2022-11-24T13:44:27.566Z", "updated_at": "2022-11-24T13:44:32.678Z", "lesson": 3, "question": "Create an expression tree for the expression.a*(b+c)+((d+e*f)*g)", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 6, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 170, "fields": {"created_at": "2022-11-24T13:45:37.507Z", "updated_at": "2022-11-24T13:45:37.507Z", "lesson": 4, "question": "Illustrate Kruskal’s algorithm to find the minimum spanning tree of a graph.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 3, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 171, "fields": {"created_at": "2022-11-24T13:45:44.276Z", "updated_at": "2022-11-24T13:45:44.277Z", "lesson": 3, "question": "How does the AVL tree differ from binary search tree?", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 172, "fields": {"created_at": "2022-11-24T13:45:57.548Z", "updated_at": "2022-11-24T13:45:57.548Z", "lesson": 4, "question": "Compare any two applications of Graph with your own example", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 5, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 173, "fields": {"created_at": "2022-11-24T13:46:27.470Z", "updated_at": "2022-11-24T13:46:27.470Z", "lesson": 4, "question": "Describe any one of the shortest path algorithms with suitable example", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 174, "fields": {"created_at": "2022-11-24T13:46:39.392Z", "updated_at": "2022-11-24T13:46:39.392Z", "lesson": 3, "question": "What are the various rotations in AVL trees?", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 175, "fields": {"created_at": "2022-11-24T13:46:49.234Z", "updated_at": "2022-11-24T13:46:49.234Z", "lesson": 4, "question": "Discuss the prims algorithm for minmum spanning tree.Give an example.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 176, "fields": {"created_at": "2022-11-24T13:47:33.324Z", "updated_at": "2022-11-24T13:47:33.324Z", "lesson": 3, "question": "List the applications of trees.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 177, "fields": {"created_at": "2022-11-24T13:47:33.630Z", "updated_at": "2022-11-24T13:47:33.630Z", "lesson": 4, "question": "Develop an algorithm to compute the shortest path using Dijkstra’s algorithm. Validate the algorithm with suitable example.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 6, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 178, "fields": {"created_at": "2022-11-24T13:47:57.421Z", "updated_at": "2022-11-24T13:47:57.421Z", "lesson": 4, "question": "Explain the depth first approach of finding articulation points in a connected graph with necessary algorithm.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 179, "fields": {"created_at": "2022-11-24T13:48:35.509Z", "updated_at": "2022-11-24T13:48:35.509Z", "lesson": 4, "question": "Write short notes on Bi-connectivity.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 180, "fields": {"created_at": "2022-11-24T13:48:54.234Z", "updated_at": "2022-11-24T13:48:54.234Z", "lesson": 4, "question": "Express different types of graphs with example.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "H", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 181, "fields": {"created_at": "2022-11-24T13:49:21.962Z", "updated_at": "2022-11-24T18:00:05.317Z", "lesson": 4, "question": "Given the adjacency matrix of a graph, write a program to calculate the in- degree and the out-degree of a node N in the graph.", "answer": "", "mark": 8, "start_mark": 15, "end_mark": 16, "btl": 4, "difficulty": "H", "created_by": 1, "previous_years": [5]}}, {"model": "questions.question", "pk": 182, "fields": {"created_at": "2022-11-24T13:49:23.307Z", "updated_at": "2022-11-24T13:49:23.307Z", "lesson": 3, "question": "What are threaded binary trees? Give its advantages", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 183, "fields": {"created_at": "2022-11-24T13:49:42.860Z", "updated_at": "2022-11-24T13:49:42.860Z", "lesson": 4, "question": "How can we efficiently check whether or not a graph is disconnected?", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 5, "difficulty": "H", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 184, "fields": {"created_at": "2022-11-24T13:49:56.769Z", "updated_at": "2022-11-24T13:49:56.769Z", "lesson": 4, "question": "Describe an algorithm that uses a brute force approach to find all the articulation points in G in O(V (V + E)) time.", "answer": "", "mark": 4, "start_mark": 8, "end_mark": 9, "btl": 5, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 185, "fields": {"created_at": "2022-11-24T13:50:16.023Z", "updated_at": "2022-11-24T13:50:16.023Z", "lesson": 4, "question": "Given a rooted tree, one desires to find the shortest path from the root to a given node v. Which algorithm would one use to find this shortest path.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 6, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 186, "fields": {"created_at": "2022-11-24T13:50:26.532Z", "updated_at": "2022-11-24T14:06:13.529Z", "lesson": 3, "question": "Define balance factor of AVL Tree.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 187, "fields": {"created_at": "2022-11-24T13:50:38.015Z", "updated_at": "2022-11-24T13:50:38.015Z", "lesson": 4, "question": "Write a program to determine whether there is at least one path from the source to the destination.", "answer": "", "mark": 4, "start_mark": 8, "end_mark": 9, "btl": 6, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 188, "fields": {"created_at": "2022-11-24T13:50:53.253Z", "updated_at": "2022-11-24T13:50:53.253Z", "lesson": 3, "question": "How do we calculate the balance factor for each node in a AVL tree?", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 189, "fields": {"created_at": "2022-11-24T13:51:31.565Z", "updated_at": "2022-11-24T13:51:31.565Z", "lesson": 3, "question": "Simulate the result of inserting 3,1,4,6,2,8,9 into an initially empty AVL Tree.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 6, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 190, "fields": {"created_at": "2022-11-24T13:52:06.431Z", "updated_at": "2022-11-24T14:05:52.060Z", "lesson": 3, "question": "Give an example for expression tree.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 191, "fields": {"created_at": "2022-11-24T13:52:38.951Z", "updated_at": "2022-11-24T13:52:38.951Z", "lesson": 3, "question": "Number the following binary tree to traverse it in i.Preorder\r\nii.Inorder", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 2, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 192, "fields": {"created_at": "2022-11-24T13:53:20.513Z", "updated_at": "2022-11-24T13:53:20.513Z", "lesson": 3, "question": "Explain why binary search cannot be performed on a linked list.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 193, "fields": {"created_at": "2022-11-24T13:54:20.207Z", "updated_at": "2022-11-24T13:54:20.207Z", "lesson": 3, "question": "How do you calculate the depth of a B-Tree?", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 194, "fields": {"created_at": "2022-11-24T13:55:01.568Z", "updated_at": "2022-11-24T13:55:01.568Z", "lesson": 3, "question": "List out the various operations that can be performed on B-trees", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 195, "fields": {"created_at": "2022-11-24T13:55:32.456Z", "updated_at": "2022-11-24T13:55:32.456Z", "lesson": 3, "question": "List out the properties of B+ -Trees", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 196, "fields": {"created_at": "2022-11-24T13:56:02.081Z", "updated_at": "2022-11-24T13:56:02.081Z", "lesson": 3, "question": "Illustrate the steps in the construction of a heap of records with the following key values:12,33,67,8,7,80,5,23", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 197, "fields": {"created_at": "2022-11-24T13:56:38.529Z", "updated_at": "2022-11-24T13:56:38.529Z", "lesson": 3, "question": "Analyze the properties of binary heap.", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 198, "fields": {"created_at": "2022-11-24T13:57:30.229Z", "updated_at": "2022-11-24T13:57:30.229Z", "lesson": 3, "question": "Define a heap and show how it can be used to represent a priority queue", "answer": "", "mark": 1, "start_mark": 2, "end_mark": 2, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 199, "fields": {"created_at": "2022-11-24T13:59:29.036Z", "updated_at": "2022-11-24T13:59:29.036Z", "lesson": 3, "question": "Write an algorithm for preorder, inorder and postorder traversal of a binary tree.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 200, "fields": {"created_at": "2022-11-24T14:00:27.502Z", "updated_at": "2022-11-24T14:00:27.502Z", "lesson": 3, "question": "Explain the following operations on a binary search tree with suitable algorithms\r\ni.\tFind a node", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 201, "fields": {"created_at": "2022-11-24T14:01:25.234Z", "updated_at": "2022-11-24T14:01:25.234Z", "lesson": 3, "question": "Explain the following operations on a binary search tree with suitable algorithms\r\n\r\ni.\tFind the minimum and maximum elements of binary search tree", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 202, "fields": {"created_at": "2022-11-24T14:01:56.883Z", "updated_at": "2022-11-24T14:05:33.715Z", "lesson": 3, "question": "Write short notes on threaded binary tree", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 203, "fields": {"created_at": "2022-11-24T14:02:39.200Z", "updated_at": "2022-11-24T14:02:39.200Z", "lesson": 3, "question": "Describe an iterative algorithm to traverse a tree in preorder", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 204, "fields": {"created_at": "2022-11-24T14:03:16.561Z", "updated_at": "2022-11-24T14:03:16.561Z", "lesson": 3, "question": "Write an algorithm for inserting and deleting a node in a binary search tree.", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 205, "fields": {"created_at": "2022-11-24T14:03:56.803Z", "updated_at": "2022-11-24T14:03:56.803Z", "lesson": 3, "question": "Discuss in detail the various methods in which a binary tree can be represented. Discuss the advantage and disadvantage of each method", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 2, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 206, "fields": {"created_at": "2022-11-24T14:05:56.907Z", "updated_at": "2022-11-24T14:05:56.907Z", "lesson": 3, "question": "Explain the B+ tree and its properties with an Example", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 5, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 207, "fields": {"created_at": "2022-11-24T14:07:10.033Z", "updated_at": "2022-11-24T14:07:10.033Z", "lesson": 3, "question": "What are the steps to convert general tree to binary tree?", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 5, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 208, "fields": {"created_at": "2022-11-24T14:07:48.538Z", "updated_at": "2022-11-24T14:13:49.448Z", "lesson": 3, "question": "Construct B Tree to insert the following key elements(order of the tree is 3) 5,2,13,3,45,72,4,6,9,22", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 6, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 209, "fields": {"created_at": "2022-11-24T14:09:20.340Z", "updated_at": "2022-11-24T14:13:59.117Z", "lesson": 3, "question": "Draw a B Tree of order 6", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 6, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 210, "fields": {"created_at": "2022-11-24T14:10:09.740Z", "updated_at": "2022-11-24T14:10:09.740Z", "lesson": 3, "question": "Discuss how to insert an element in a AVL tree, Explain with algorithm.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 211, "fields": {"created_at": "2022-11-24T14:10:47.728Z", "updated_at": "2022-11-24T14:10:47.728Z", "lesson": 3, "question": "Explain how deletion can take place in AVL trees with suitable algorithms", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 212, "fields": {"created_at": "2022-11-24T14:11:23.979Z", "updated_at": "2022-11-24T14:14:11.194Z", "lesson": 3, "question": "What are AVL trees? Describe the different rotations defined for AVL tree.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 213, "fields": {"created_at": "2022-11-24T14:12:28.086Z", "updated_at": "2022-11-24T14:14:18.585Z", "lesson": 3, "question": "Insert the following elements step by step in sequence into an empty AVL\r\ntree 15,18,20,21,28,2330,26", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 1, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 214, "fields": {"created_at": "2022-11-24T14:13:41.415Z", "updated_at": "2022-11-24T14:13:41.415Z", "lesson": 3, "question": "Point out the operations of B-tree using 2-3 tree.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 4, "difficulty": "H", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 215, "fields": {"created_at": "2022-11-24T14:14:23.402Z", "updated_at": "2022-11-24T14:14:23.402Z", "lesson": 3, "question": "Explain the operations of threaded binary tree.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 4, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 216, "fields": {"created_at": "2022-11-24T14:15:29.215Z", "updated_at": "2022-11-24T14:15:29.215Z", "lesson": 3, "question": "Discuss the different traversal technique in binary tree with suitable algorithms and examples?", "answer": "", "mark": 6, "start_mark": 12, "end_mark": 13, "btl": 2, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 217, "fields": {"created_at": "2022-11-24T14:16:13.772Z", "updated_at": "2022-11-24T14:16:13.772Z", "lesson": 3, "question": "Explain the construction of expression tree with example.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 4, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 218, "fields": {"created_at": "2022-11-24T14:17:00.065Z", "updated_at": "2022-11-24T14:17:00.065Z", "lesson": 3, "question": "Give the applications of trees", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 6, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 219, "fields": {"created_at": "2022-11-24T14:17:30.787Z", "updated_at": "2022-11-24T14:18:32.847Z", "lesson": 3, "question": "Show the result of inserting 15,17,6,19,11,10,13,20,8,14,12 one at a time into an initially empty binary min heap.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 3, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 220, "fields": {"created_at": "2022-11-24T14:18:12.570Z", "updated_at": "2022-11-24T14:18:41.046Z", "lesson": 3, "question": "Show the result of performing three delete min operations in the final binary min heap obtained", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 221, "fields": {"created_at": "2022-11-24T14:19:58.452Z", "updated_at": "2022-11-24T14:19:58.452Z", "lesson": 3, "question": "Illustrate How delete operation performed on binary heap?", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 3, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 222, "fields": {"created_at": "2022-11-24T14:20:43.800Z", "updated_at": "2022-11-24T14:20:55.401Z", "lesson": 3, "question": "Write a suitable operations for procolate up and percolate down operations in a binary heap", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 3, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 223, "fields": {"created_at": "2022-11-24T14:21:41.679Z", "updated_at": "2022-11-24T14:21:41.679Z", "lesson": 3, "question": "Compare B trees with B+ trees.", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 6, "difficulty": "M", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 224, "fields": {"created_at": "2022-11-24T14:22:26.182Z", "updated_at": "2022-11-24T14:22:26.182Z", "lesson": 3, "question": "Create a B+ tree of order 5 for the following data arriving in sequence:\r\n90, 27, 7, 9, 18, 21, 3, 4, 16, 11, 21, 72", "answer": "", "mark": 4, "start_mark": 8, "end_mark": 9, "btl": 6, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 225, "fields": {"created_at": "2022-11-24T14:23:58.578Z", "updated_at": "2022-11-24T14:23:58.578Z", "lesson": 3, "question": "Draw B – Tree pf order m = 5 for the keys\r\n{K, O,S,V,MF,B,G,T,U,W}", "answer": "", "mark": 3, "start_mark": 5, "end_mark": 7, "btl": 5, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 226, "fields": {"created_at": "2022-11-24T14:25:05.380Z", "updated_at": "2022-11-24T14:31:10.041Z", "lesson": 3, "question": "1)Draw B – Tree pf order m = 5 for the keys\r\n{K, O,S,V,MF,B,G,T,U,W}\r\n2)Delete the keys K and G in order.", "answer": "", "mark": 5, "start_mark": 10, "end_mark": 11, "btl": 5, "difficulty": "E", "created_by": 1, "previous_years": []}}, {"model": "questions.question", "pk": 227, "fields": {"created_at": "2022-11-24T14:25:59.935Z", "updated_at": "2022-11-24T14:32:17.389Z", "lesson": 3, "question": "i.\tDraw B – Tree pf order m = 5 for the keys\r\n{K, O,S,V,MF,B,G,T,U,W}\t\r\nii.\tDelete the keys K and G in order. \r\niii.\tJustify the number of splits needed for inserts / delete with proper reasons.", "answer": "", "mark": 8, "start_mark": 15, "end_mark": 16, "btl": 5, "difficulty": "M", "created_by": 1, "previous_years": []}}]