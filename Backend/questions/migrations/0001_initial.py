# Generated by Django 4.1.1 on 2022-11-25 07:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_choices_field.fields
import questions.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BloomsTaxonomyLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=3, unique=True)),
                ('description', models.CharField(max_length=70)),
            ],
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('full_form', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='MarkRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.IntegerField(validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(20)])),
                ('end', models.IntegerField(validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(20)])),
            ],
            options={
                'unique_together': {('start', 'end')},
            },
        ),
        migrations.CreateModel(
            name='PreviousYearsQP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', django_choices_field.fields.TextChoicesField(choices=[('AM', 'A/M'), ('ND', 'N/D')], choices_enum=questions.models.PreviousYearsQP.MonthEnum, max_length=2)),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1990), django.core.validators.MaxValueValidator(2022)])),
            ],
            options={
                'unique_together': {('month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Regulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(2010), django.core.validators.MaxValueValidator(2022)])),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=15)),
                ('subject_name', models.CharField(max_length=70)),
                ('co', models.CharField(max_length=7)),
                ('co_description', models.CharField(max_length=200)),
                ('course_outcome', models.TextField()),
                ('coe', models.ManyToManyField(blank=True, related_name='subjects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('code', 'co')},
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', models.TextField()),
                ('answer', models.TextField(blank=True, null=True)),
                ('start_mark', models.IntegerField(blank=True)),
                ('end_mark', models.IntegerField(blank=True)),
                ('difficulty', django_choices_field.fields.TextChoicesField(choices=[('E', 'Easy'), ('M', 'Medium'), ('H', 'Hard')], choices_enum=questions.models.Question.DifficultyEnum, max_length=1)),
                ('btl', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='questions.bloomstaxonomylevel')),
                ('created_by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to=settings.AUTH_USER_MODEL)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quesions', to='questions.lesson')),
                ('mark', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='questions.markrange')),
                ('previous_years', models.ManyToManyField(blank=True, related_name='questions', to='questions.previousyearsqp')),
            ],
        ),
        migrations.AddField(
            model_name='lesson',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='questions.subject'),
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.CharField(max_length=80)),
                ('branch_code', models.CharField(max_length=10)),
                ('degree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='questions.degree')),
                ('hod', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='departments', to=settings.AUTH_USER_MODEL)),
                ('programme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='questions.programme')),
            ],
            options={
                'unique_together': {('programme', 'degree', 'branch_code')},
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('active', models.BooleanField(default=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='questions.department')),
                ('regulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='questions.regulation')),
            ],
            options={
                'unique_together': {('regulation', 'semester', 'department')},
            },
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(25)])),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='syllabuses', to='questions.course')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='syllabuses', to='questions.lesson')),
            ],
            options={
                'unique_together': {('course', 'unit', 'lesson')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='lesson',
            unique_together={('name', 'subject')},
        ),
        migrations.CreateModel(
            name='FacultiesHandling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculties', to='questions.course')),
                ('faculties', models.ManyToManyField(related_name='faculties', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faculties', to='questions.subject')),
            ],
            options={
                'unique_together': {('course', 'subject')},
            },
        ),
    ]
